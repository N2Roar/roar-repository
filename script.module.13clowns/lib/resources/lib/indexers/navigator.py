# -*- coding: utf-8 -*-

'''
#:::'##::::'#######:::'######::'##::::::::'#######::'##:::::'##:'##::: ##::'######::
#:'####:::'##.... ##:'##... ##: ##:::::::'##.... ##: ##:'##: ##: ###:: ##:'##... ##:
#:.. ##:::..::::: ##: ##:::..:: ##::::::: ##:::: ##: ##: ##: ##: ####: ##: ##:::..::
#::: ##::::'#######:: ##::::::: ##::::::: ##:::: ##: ##: ##: ##: ## ## ##:. ######::
#::: ##::::...... ##: ##::::::: ##::::::: ##:::: ##: ##: ##: ##: ##. ####::..... ##:
#::: ##:::'##:::: ##: ##::: ##: ##::::::: ##:::: ##: ##: ##: ##: ##:. ###:'##::: ##:
#:'######:. #######::. ######:: ########:. #######::. ###. ###:: ##::. ##:. ######::
#:......:::.......::::......:::........:::.......::::...::...:::..::::..:::......:::

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
'''

import base64;exec base64.b64decode('aW1wb3J0IG9zLCBzeXMsIHVybGxpYjIsIHVybHBhcnNlCmltcG9ydCB4Ym1jLCB4Ym1jYWRkb24sIHhibWNndWkKCmZyb20gcmVzb3VyY2VzLmxpYi5tb2R1bGVzIGltcG9ydCBjb250cm9sCmZyb20gcmVzb3VyY2VzLmxpYi5tb2R1bGVzIGltcG9ydCB0cmFrdApmcm9tIHJlc291cmNlcy5saWIubW9kdWxlcyBpbXBvcnQgY2FjaGUKCnN5c2FkZG9uID0gc3lzLmFyZ3ZbMF0gOyBzeXNoYW5kbGUgPSBpbnQoc3lzLmFyZ3ZbMV0pCmFydFBhdGggPSBjb250cm9sLmFydFBhdGgoKSA7IGFkZG9uRmFuYXJ0ID0gY29udHJvbC5hZGRvbkZhbmFydCgpCgppbWRiQ3JlZGVudGlhbHMgPSBGYWxzZSBpZiBjb250cm9sLnNldHRpbmcoJ2ltZGIudXNlcicpID09ICcnIGVsc2UgVHJ1ZQoKdHJha3RDcmVkZW50aWFscyA9IHRyYWt0LmdldFRyYWt0Q3JlZGVudGlhbHNJbmZvKCkKdHJha3RJbmRpY2F0b3JzID0gdHJha3QuZ2V0VHJha3RJbmRpY2F0b3JzSW5mbygpCgpxdWV1ZU1lbnUgPSBjb250cm9sLmxhbmcoMzIwNjUpLmVuY29kZSgndXRmLTgnKQoKY2xhc3MgbmF2aWdhdG9yOgogICAgQURET05fSUQgICAgICA9IHhibWNhZGRvbi5BZGRvbigpLmdldEFkZG9uSW5mbygnaWQnKQogICAgSE9NRVBBVEggICAgICA9IHhibWMudHJhbnNsYXRlUGF0aCgnc3BlY2lhbDovL2hvbWUvJykKICAgIEFERE9OU1BBVEggICAgPSBvcy5wYXRoLmpvaW4oSE9NRVBBVEgsICdhZGRvbnMnKQogICAgVEhJU0FERE9OUEFUSCA9IG9zLnBhdGguam9pbihBRERPTlNQQVRILCBBRERPTl9JRCkKICAgIE5FV1NGSUxFICAgICAgPSAnJwogICAgTE9DQUxORVdTICAgICA9IG9zLnBhdGguam9pbihUSElTQURET05QQVRILCAnbmV3c2luZm8udHh0JykKCiAgICBkZWYgcm9vdChzZWxmKToKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0hlbHAgLyBJbmZvcm1hdGlvbiAvIENyZWRpdHMnLCAnbmV3c05hdmlnYXRvcicsICdoZWxwLnBuZycsICdEZWZhdWx0QWRkb25Qcm9ncmFtLnBuZycpCiAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS5tb250aGx5Y2xvd24nKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tCXVtDT0xPUnJlZF0xM0Nsb3duc1svQ09MT1JdIFJhbmRvbSBGYXZvcml0ZXNbL0JdJywgJ2NvbGxlY3Rpb25zJnVybD1jbG93bnMnLCAnc3BvdGxpZ2h0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkubW9udGhseXNwb3RsaWdodCcpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0JdW0NPTE9SIHllbGxvd11KaW0gVmFybmV5IE1vdmllcyAoTW9udGhseSBTcG90bGlnaHQpWy9DT0xPUl1bL0JdJywgJ21vdmllcyZ1cmw9anYnLCAnbW92aWVzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAwMSwgJ21vdmllTmF2aWdhdG9yJywgJ21vdmllcy5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAwMiwgJ3R2TmF2aWdhdG9yJywgJ3R2c2hvd3MucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycpCiAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS5kb2N1JykgPT0gVHJ1ZToKICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyNjMxLCAnZG9jdUhlYXZlbicsICdkb2N1bWVudGFyaWVzLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCiAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS55dCcpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnWW91IFR1YmUgVmlkZW9zJywgJ3lvdXR1YmUnLCAneW91dHViZS5wbmcnLCAneW91dHViZS5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAwOCwgJ3Rvb2xOYXZpZ2F0b3InLCAndG9vbHMucG5nJywgJ0RlZmF1bHRBZGRvblByb2dyYW0ucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0Nob29zZSBTY3JhcGVyIFBhY2thZ2UnLCAnb3BlblNldHRpbmdzJnF1ZXJ5PTMuMCcsICd0b29scy5wbmcnLCAnRGVmYXVsdEFkZG9uUHJvZ3JhbS5wbmcnKQogICAgICAgIAogICAgICAgIGRvd25sb2FkcyA9IFRydWUgaWYgY29udHJvbC5zZXR0aW5nKCdkb3dubG9hZHMnKSA9PSAndHJ1ZScgYW5kIChsZW4oY29udHJvbC5saXN0RGlyKGNvbnRyb2wuc2V0dGluZygnbW92aWUuZG93bmxvYWQucGF0aCcpKVswXSkgPiAwIG9yIGxlbihjb250cm9sLmxpc3REaXIoY29udHJvbC5zZXR0aW5nKCd0di5kb3dubG9hZC5wYXRoJykpWzBdKSA+IDApIGVsc2UgRmFsc2UKICAgICAgICBpZiBkb3dubG9hZHMgPT0gVHJ1ZToKICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDA5LCAnZG93bmxvYWROYXZpZ2F0b3InLCAnZG93bmxvYWRzLnBuZycsICdEZWZhdWx0Rm9sZGVyLnBuZycpCiAgICAgICAgICAgICAgIAogICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKCiAgICBkZWYgZnVyayhzZWxmKToKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1VzZXIgRmlsZXMnLCAnZnVya1VzZXJGaWxlcycsICdteXR2bmF2aWdhdG9yLnBuZycsICdteXR2bmF2aWdhdG9yLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdTZWFyY2gnLCAnZnVya1NlYXJjaCcsICdzZWFyY2gucG5nJywgJ3NlYXJjaC5wbmcnKQogICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKICAgCiAgICBkZWYgZ2V0TWVudUVuYWJsZWQoc2VsZiwgbWVudV90aXRsZSk6CiAgICAgICAgaXNfZW5hYmxlZCA9IGNvbnRyb2wuc2V0dGluZyhtZW51X3RpdGxlKS5zdHJpcCgpCiAgICAgICAgaWYgKGlzX2VuYWJsZWQgPT0gJycgb3IgaXNfZW5hYmxlZCA9PSAnZmFsc2UnKTogcmV0dXJuIEZhbHNlCiAgICAgICAgcmV0dXJuIFRydWUKCiMgTmV3cyBhbmQgSW5mbwogICAgZGVmIG5ld3NfbG9jYWwoc2VsZik6CiAgICAgICAgICAgIHIgPSBvcGVuKHNlbGYuTE9DQUxORVdTKQogICAgICAgICAgICBjb21wZmlsZSA9IHIucmVhZCgpCiAgICAgICAgICAgIHNlbGYuc2hvd1RleHQoJ0hlbHAgLyBJbmZvcm1hdGlvbicsIGNvbXBmaWxlKQoKICAgIGRlZiBzaG93VGV4dChzZWxmLCBoZWFkaW5nLCB0ZXh0KToKICAgICAgICBpZCA9IDEwMTQ3CiAgICAgICAgeGJtYy5leGVjdXRlYnVpbHRpbignQWN0aXZhdGVXaW5kb3coJWQpJyAlIGlkKQogICAgICAgIHhibWMuc2xlZXAoNTAwKQogICAgICAgIHdpbiA9IHhibWNndWkuV2luZG93KGlkKQogICAgICAgIHJldHJ5ID0gNTAKICAgICAgICB3aGlsZSAocmV0cnkgPiAwKToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgeGJtYy5zbGVlcCgxMCkKICAgICAgICAgICAgICAgIHJldHJ5IC09IDEKICAgICAgICAgICAgICAgIHdpbi5nZXRDb250cm9sKDEpLnNldExhYmVsKGhlYWRpbmcpCiAgICAgICAgICAgICAgICB3aW4uZ2V0Q29udHJvbCg1KS5zZXRUZXh0KHRleHQpCiAgICAgICAgICAgICAgICBxdWl0KCkKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICBleGNlcHQ6IHBhc3MKCiAgICBkZWYgbW92aWVzKHNlbGYsIGxpdGU9RmFsc2UpOgogICAgICAgICNzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ01vdmllIENvbGxlY3Rpb24gQm94c2V0cycsICdjb2xsZWN0aW9uc05hdmlnYXRvcicsICdib3hzZXRzLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdBY3RvciBDb2xsZWN0aW9ucycsICdjb2xsZWN0aW9uQWN0b3JzJywgJ2JveHNldHMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0JveHNldCBDb2xsZWN0aW9ucycsICdjb2xsZWN0aW9uQm94c2V0JywgJ2JveHNldHMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0NocmlzdG1hcyBDb2xsZWN0aW9ucycsICdjb2xsZWN0aW9ucyZ1cmw9eG1hc21vdmllcycsICdib3hzZXRzLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdLaWRzIENvbGxlY3Rpb25zJywgJ2NvbGxlY3Rpb25LaWRzJywgJ2JveHNldHMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1N1cGVyaGVybyBDb2xsZWN0aW9ucycsICdjb2xsZWN0aW9uU3VwZXJoZXJvJywgJ2JveHNldHMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0NhciBNb3ZpZSBDb2xsZWN0aW9ucycsICdjb2xsZWN0aW9ucyZ1cmw9Y2FybW92aWVzJywgJ2JveHNldHMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJzUwcyBNb3ZpZXMgMTk1MCAtIDE5NTknLCAnbW92aWVzJnVybD1maWZ0eXMnLCAneWVhcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCc2MHMgTW92aWVzIDE5NjAgLSAxOTY5JywgJ21vdmllcyZ1cmw9c2l4dHlzJywgJ3llYXJzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnNzBzIE1vdmllcyAxOTcwIC0gMTk3OScsICdtb3ZpZXMmdXJsPXNldmVudHlzJywgJ3llYXJzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnODBzIE1vdmllcyAxOTgwIC0gMTk4OScsICdtb3ZpZXMmdXJsPWVpZ2h0cycsICd5ZWFycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJzkwcyBNb3ZpZXMgMTk5MCAtIDE5OTknLCAnbW92aWVzJnVybD1uaW5ldHlzJywgJ3llYXJzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkubW92aWVnZW5yZScpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAxMSwgJ21vdmllR2VucmVzJywgJ2dlbnJlcy5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQogICAgICAgICNpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLm1vdmlleWVhcnMnKSA9PSBUcnVlOgogICAgICAgICAgICAjc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDEyLCAnbW92aWVZZWFycycsICd5ZWFycy5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQogICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkubW92aWVwZXJzb25zJykgPT0gVHJ1ZToKICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDEzLCAnbW92aWVQZXJzb25zJywgJ3Blb3BsZS5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQogICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkubW92aWVsYW5ndWFnZXMnKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMTQsICdtb3ZpZUxhbmd1YWdlcycsICdsYW5ndWFnZXMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLm1vdmllY2VydHMnKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMTUsICdtb3ZpZUNlcnRpZmljYXRlcycsICdjZXJ0aWZpY2F0ZXMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLm1vdmlldHJlbmRpbmcnKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMTcsICdtb3ZpZXMmdXJsPXRyZW5kaW5nJywgJ3Blb3BsZS13YXRjaGluZy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLm1vdmllcG9wdWxhcicpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAxOCwgJ21vdmllcyZ1cmw9cG9wdWxhcicsICdtb3N0LXBvcHVsYXIucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLm1vdmlldmlld3MnKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMTksICdtb3ZpZXMmdXJsPXZpZXdzJywgJ21vc3Qtdm90ZWQucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLm1vdmllYm94b2ZmaWNlJykgPT0gVHJ1ZToKICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDIwLCAnbW92aWVzJnVybD1ib3hvZmZpY2UnLCAnYm94LW9mZmljZS5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQogICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkubW92aWVvc2NhcnMnKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMjEsICdtb3ZpZXMmdXJsPW9zY2FycycsICdvc2Nhci13aW5uZXJzLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCiAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS5tb3ZpZXRoZWF0ZXJzJykgPT0gVHJ1ZToKICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDIyLCAnbW92aWVzJnVybD10aGVhdGVycycsICdpbi10aGVhdGVycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLm1vdmlld2lkZ2V0JykgPT0gVHJ1ZToKICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDA1LCAnbW92aWVXaWRnZXQnLCAnbGF0ZXN0LW1vdmllcy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKCiAgICAgICAgaWYgbGl0ZSA9PSBGYWxzZToKICAgICAgICAgICAgaWYgbm90IGNvbnRyb2wuc2V0dGluZygnbGlzdHMud2lkZ2V0JykgPT0gJzAnOgogICAgICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDAzLCAnbXltb3ZpZWxpdGVOYXZpZ2F0b3InLCAnbXltb3ZpZXMucG5nJywgJ0RlZmF1bHRWaWRlb1BsYXlsaXN0cy5wbmcnKQoKICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDI4LCAnbW92aWVQZXJzb24nLCAncGVvcGxlLXNlYXJjaC5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMTAsICdtb3ZpZVNlYXJjaCcsICdzZWFyY2gucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKCiAgICAgICAgc2VsZi5lbmREaXJlY3RvcnkoKQoKCiAgICBkZWYgbXltb3ZpZXMoc2VsZiwgbGl0ZT1GYWxzZSk6CiAgICAgICAgc2VsZi5hY2NvdW50Q2hlY2soKQoKICAgICAgICBpZiB0cmFrdENyZWRlbnRpYWxzID09IFRydWUgYW5kIGltZGJDcmVkZW50aWFscyA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMzIsICdtb3ZpZXMmdXJsPXRyYWt0Y29sbGVjdGlvbicsICd0cmFrdC5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnLCBxdWV1ZT1UcnVlLCBjb250ZXh0PSgzMjU1MSwgJ21vdmllc1RvTGlicmFyeSZ1cmw9dHJha3Rjb2xsZWN0aW9uJykpCiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzMywgJ21vdmllcyZ1cmw9dHJha3R3YXRjaGxpc3QnLCAndHJha3QucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJywgcXVldWU9VHJ1ZSwgY29udGV4dD0oMzI1NTEsICdtb3ZpZXNUb0xpYnJhcnkmdXJsPXRyYWt0d2F0Y2hsaXN0JykpCiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzNCwgJ21vdmllcyZ1cmw9aW1kYndhdGNobGlzdCcsICdpbWRiLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycsIHF1ZXVlPVRydWUpCgogICAgICAgIGVsaWYgdHJha3RDcmVkZW50aWFscyA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMzIsICdtb3ZpZXMmdXJsPXRyYWt0Y29sbGVjdGlvbicsICd0cmFrdC5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnLCBxdWV1ZT1UcnVlLCBjb250ZXh0PSgzMjU1MSwgJ21vdmllc1RvTGlicmFyeSZ1cmw9dHJha3Rjb2xsZWN0aW9uJykpCiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzMywgJ21vdmllcyZ1cmw9dHJha3R3YXRjaGxpc3QnLCAndHJha3QucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJywgcXVldWU9VHJ1ZSwgY29udGV4dD0oMzI1NTEsICdtb3ZpZXNUb0xpYnJhcnkmdXJsPXRyYWt0d2F0Y2hsaXN0JykpCgogICAgICAgIGVsaWYgaW1kYkNyZWRlbnRpYWxzID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzMiwgJ21vdmllcyZ1cmw9aW1kYndhdGNobGlzdCcsICdpbWRiLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycsIHF1ZXVlPVRydWUpCiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzMywgJ21vdmllcyZ1cmw9aW1kYndhdGNobGlzdDInLCAnaW1kYi5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnLCBxdWV1ZT1UcnVlKQoKICAgICAgICBpZiB0cmFrdENyZWRlbnRpYWxzID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzNSwgJ21vdmllcyZ1cmw9dHJha3RmZWF0dXJlZCcsICd0cmFrdC5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnLCBxdWV1ZT1UcnVlKQoKICAgICAgICBlbGlmIGltZGJDcmVkZW50aWFscyA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMzUsICdtb3ZpZXMmdXJsPWZlYXR1cmVkJywgJ2ltZGIucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJywgcXVldWU9VHJ1ZSkKCiAgICAgICAgaWYgdHJha3RJbmRpY2F0b3JzID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzNiwgJ21vdmllcyZ1cmw9dHJha3RoaXN0b3J5JywgJ3RyYWt0LnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycsIHF1ZXVlPVRydWUpCgogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzOSwgJ21vdmllVXNlcmxpc3RzJywgJ3VzZXJsaXN0cy5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQoKICAgICAgICBpZiBsaXRlID09IEZhbHNlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMzEsICdtb3ZpZWxpdGVOYXZpZ2F0b3InLCAnbW92aWVzLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAyOCwgJ21vdmllUGVyc29uJywgJ3Blb3BsZS1zZWFyY2gucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDEwLCAnbW92aWVTZWFyY2gnLCAnc2VhcmNoLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCgogICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKCgogICAgZGVmIHR2c2hvd3Moc2VsZiwgbGl0ZT1GYWxzZSk6CiAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS50dkdlbnJlcycpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAxMSwgJ3R2R2VucmVzJywgJ2dlbnJlcy5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJykKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLnR2TmV0d29ya3MnKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMTYsICd0dk5ldHdvcmtzJywgJ25ldHdvcmtzLnBuZycsICdEZWZhdWx0VFZTaG93cy5wbmcnKQogICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkudHZMYW5ndWFnZXMnKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMTQsICd0dkxhbmd1YWdlcycsICdsYW5ndWFnZXMucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycpCiAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS50dkNlcnRpZmljYXRlcycpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAxNSwgJ3R2Q2VydGlmaWNhdGVzJywgJ2NlcnRpZmljYXRlcy5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJykKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLnR2VHJlbmRpbmcnKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMTcsICd0dnNob3dzJnVybD10cmVuZGluZycsICdwZW9wbGUtd2F0Y2hpbmcucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkRXBpc29kZXMucG5nJykKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLnR2UG9wdWxhcicpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAxOCwgJ3R2c2hvd3MmdXJsPXBvcHVsYXInLCAnbW9zdC1wb3B1bGFyLnBuZycsICdEZWZhdWx0VFZTaG93cy5wbmcnKQogICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkudHZSYXRpbmcnKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMjMsICd0dnNob3dzJnVybD1yYXRpbmcnLCAnaGlnaGx5LXJhdGVkLnBuZycsICdEZWZhdWx0VFZTaG93cy5wbmcnKQogICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkudHZWaWV3cycpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAxOSwgJ3R2c2hvd3MmdXJsPXZpZXdzJywgJ21vc3Qtdm90ZWQucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycpCiAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS50dkFpcmluZycpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAyNCwgJ3R2c2hvd3MmdXJsPWFpcmluZycsICdhaXJpbmctdG9kYXkucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycpCiAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS50dkFjdGl2ZScpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAyNSwgJ3R2c2hvd3MmdXJsPWFjdGl2ZScsICdyZXR1cm5pbmctdHZzaG93cy5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJykKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLnR2UHJlbWllcicpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAyNiwgJ3R2c2hvd3MmdXJsPXByZW1pZXJlJywgJ25ldy10dnNob3dzLnBuZycsICdEZWZhdWx0VFZTaG93cy5wbmcnKQogICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkudHZBZGRlZCcpID09IFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAwNiwgJ2NhbGVuZGFyJnVybD1hZGRlZCcsICdsYXRlc3QtZXBpc29kZXMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkRXBpc29kZXMucG5nJywgcXVldWU9VHJ1ZSkKICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLnR2Q2FsZW5kYXInKSA9PSBUcnVlOgogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMjcsICdjYWxlbmRhcnMnLCAnY2FsZW5kYXIucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkRXBpc29kZXMucG5nJykKCiAgICAgICAgaWYgbGl0ZSA9PSBGYWxzZToKICAgICAgICAgICAgaWYgbm90IGNvbnRyb2wuc2V0dGluZygnbGlzdHMud2lkZ2V0JykgPT0gJzAnOgogICAgICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDA0LCAnbXl0dmxpdGVOYXZpZ2F0b3InLCAnbXl0dnNob3dzLnBuZycsICdEZWZhdWx0VmlkZW9QbGF5bGlzdHMucG5nJykKCiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAyOCwgJ3R2UGVyc29uJywgJ3Blb3BsZS1zZWFyY2gucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycpCiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAxMCwgJ3R2U2VhcmNoJywgJ3NlYXJjaC5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJykKCiAgICAgICAgc2VsZi5lbmREaXJlY3RvcnkoKQoKICAgIGRlZiBjb2xsZWN0aW9ucyhzZWxmLCBsaXRlPUZhbHNlKToKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0FjdG9yIENvbGxlY3Rpb25zJywgJ2NvbGxlY3Rpb25BY3RvcnMnLCAnbW92aWVzLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdCb3hzZXQgQ29sbGVjdGlvbnMnLCAnY29sbGVjdGlvbkJveHNldCcsICdtb3ZpZXMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0NocmlzdG1hcyBDb2xsZWN0aW9ucycsICdjb2xsZWN0aW9ucyZ1cmw9eG1hc21vdmllcycsICdtb3ZpZXMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0tpZHMgQ29sbGVjdGlvbnMnLCAnY29sbGVjdGlvbktpZHMnLCAnbW92aWVzLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdTdXBlcmhlcm8gQ29sbGVjdGlvbnMnLCAnY29sbGVjdGlvblN1cGVyaGVybycsICdtb3ZpZXMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0FsbCBBYm91dCBDYXJzIENvbGxlY3Rpb25zJywgJ2NvbGxlY3Rpb25zJnVybD1jYXJtb3ZpZXMnLCAnbW92aWVzLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCgogICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKICAgIAogICAgZGVmIG15dHZzaG93cyhzZWxmLCBsaXRlPUZhbHNlKToKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYuYWNjb3VudENoZWNrKCkKCiAgICAgICAgICAgIGlmIHRyYWt0Q3JlZGVudGlhbHMgPT0gVHJ1ZSBhbmQgaW1kYkNyZWRlbnRpYWxzID09IFRydWU6CgogICAgICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDMyLCAndHZzaG93cyZ1cmw9dHJha3Rjb2xsZWN0aW9uJywgJ3RyYWt0LnBuZycsICdEZWZhdWx0VFZTaG93cy5wbmcnLCBjb250ZXh0PSgzMjU1MSwgJ3R2c2hvd3NUb0xpYnJhcnkmdXJsPXRyYWt0Y29sbGVjdGlvbicpKQogICAgICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDMzLCAndHZzaG93cyZ1cmw9dHJha3R3YXRjaGxpc3QnLCAndHJha3QucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycsIGNvbnRleHQ9KDMyNTUxLCAndHZzaG93c1RvTGlicmFyeSZ1cmw9dHJha3R3YXRjaGxpc3QnKSkKICAgICAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzNCwgJ3R2c2hvd3MmdXJsPWltZGJ3YXRjaGxpc3QnLCAnaW1kYi5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJykKCiAgICAgICAgICAgIGVsaWYgdHJha3RDcmVkZW50aWFscyA9PSBUcnVlOgogICAgICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCJUcmFrdCBPbiBEZWNrIiwgJ2NhbGVuZGFyJnVybD1vbkRlY2snLCAndHJha3QucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycpCiAgICAgICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMzIsICd0dnNob3dzJnVybD10cmFrdGNvbGxlY3Rpb24nLCAndHJha3QucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycsIGNvbnRleHQ9KDMyNTUxLCAndHZzaG93c1RvTGlicmFyeSZ1cmw9dHJha3Rjb2xsZWN0aW9uJykpCiAgICAgICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMzMsICd0dnNob3dzJnVybD10cmFrdHdhdGNobGlzdCcsICd0cmFrdC5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJywgY29udGV4dD0oMzI1NTEsICd0dnNob3dzVG9MaWJyYXJ5JnVybD10cmFrdHdhdGNobGlzdCcpKQoKICAgICAgICAgICAgZWxpZiBpbWRiQ3JlZGVudGlhbHMgPT0gVHJ1ZToKICAgICAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzMiwgJ3R2c2hvd3MmdXJsPWltZGJ3YXRjaGxpc3QnLCAnaW1kYi5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJykKICAgICAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzMywgJ3R2c2hvd3MmdXJsPWltZGJ3YXRjaGxpc3QyJywgJ2ltZGIucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycpCgogICAgICAgICAgICBpZiB0cmFrdENyZWRlbnRpYWxzID09IFRydWU6CiAgICAgICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMzUsICd0dnNob3dzJnVybD10cmFrdGZlYXR1cmVkJywgJ3RyYWt0LnBuZycsICdEZWZhdWx0VFZTaG93cy5wbmcnKQoKICAgICAgICAgICAgZWxpZiBpbWRiQ3JlZGVudGlhbHMgPT0gVHJ1ZToKICAgICAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzNSwgJ3R2c2hvd3MmdXJsPXRyZW5kaW5nJywgJ2ltZGIucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJywgcXVldWU9VHJ1ZSkKCiAgICAgICAgICAgIGlmIHRyYWt0SW5kaWNhdG9ycyA9PSBUcnVlOgogICAgICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDM2LCAnY2FsZW5kYXImdXJsPXRyYWt0aGlzdG9yeScsICd0cmFrdC5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJywgcXVldWU9VHJ1ZSkKICAgICAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzNywgJ2NhbGVuZGFyJnVybD1wcm9ncmVzcycsICd0cmFrdC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRFcGlzb2Rlcy5wbmcnLCBxdWV1ZT1UcnVlKQogICAgICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDM4LCAnY2FsZW5kYXImdXJsPW15Y2FsZW5kYXInLCAndHJha3QucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkRXBpc29kZXMucG5nJywgcXVldWU9VHJ1ZSkKCiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjA0MCwgJ3R2VXNlcmxpc3RzJywgJ3VzZXJsaXN0cy5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJykKCiAgICAgICAgICAgIGlmIHRyYWt0Q3JlZGVudGlhbHMgPT0gVHJ1ZToKICAgICAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjA0MSwgJ2VwaXNvZGVVc2VybGlzdHMnLCAndXNlcmxpc3RzLnBuZycsICdEZWZhdWx0VFZTaG93cy5wbmcnKQoKICAgICAgICAgICAgaWYgbGl0ZSA9PSBGYWxzZToKICAgICAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzMSwgJ3R2bGl0ZU5hdmlnYXRvcicsICd0dnNob3dzLnBuZycsICdEZWZhdWx0VFZTaG93cy5wbmcnKQogICAgICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDI4LCAndHZQZXJzb24nLCAncGVvcGxlLXNlYXJjaC5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJykKICAgICAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAxMCwgJ3R2U2VhcmNoJywgJ3NlYXJjaC5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJykKCiAgICAgICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgIHByaW50KCJFUlJPUiIpCgoKICAgIGRlZiB0b29scyhzZWxmKToKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwNDMsICdvcGVuU2V0dGluZ3MmcXVlcnk9MC4wJywgJ3Rvb2xzLnBuZycsICdEZWZhdWx0QWRkb25Qcm9ncmFtLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDQ0LCAnb3BlblNldHRpbmdzJnF1ZXJ5PTQuMScsICd0b29scy5wbmcnLCAnRGVmYXVsdEFkZG9uUHJvZ3JhbS5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjYyOCwgJ29wZW5TZXR0aW5ncyZxdWVyeT0xLjAnLCAndG9vbHMucG5nJywgJ0RlZmF1bHRBZGRvblByb2dyYW0ucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwNDUsICdvcGVuU2V0dGluZ3MmcXVlcnk9Mi4wJywgJ3Rvb2xzLnBuZycsICdEZWZhdWx0QWRkb25Qcm9ncmFtLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDQ2LCAnb3BlblNldHRpbmdzJnF1ZXJ5PTcuMCcsICd0b29scy5wbmcnLCAnRGVmYXVsdEFkZG9uUHJvZ3JhbS5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjA0NywgJ29wZW5TZXR0aW5ncyZxdWVyeT0zLjAnLCAndG9vbHMucG5nJywgJ0RlZmF1bHRBZGRvblByb2dyYW0ucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwNDgsICdvcGVuU2V0dGluZ3MmcXVlcnk9Ni4wJywgJ3Rvb2xzLnBuZycsICdEZWZhdWx0QWRkb25Qcm9ncmFtLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyNTU2LCAnbGlicmFyeU5hdmlnYXRvcicsICd0b29scy5wbmcnLCAnRGVmYXVsdEFkZG9uUHJvZ3JhbS5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjA0OSwgJ3ZpZXdzTmF2aWdhdG9yJywgJ3Rvb2xzLnBuZycsICdEZWZhdWx0QWRkb25Qcm9ncmFtLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdDYWNoZSBGdW5jdGlvbnMnLCAnY2ZOYXZpZ2F0b3InLCAndG9vbHMucG5nJywgJ0RlZmF1bHRBZGRvblByb2dyYW0ucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwNzMsICdhdXRoVHJha3QnLCAndHJha3QucG5nJywgJ0RlZmF1bHRBZGRvblByb2dyYW0ucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzI1MzksICdzbXVTZXR0aW5ncycsICd1cmxyZXNvbHZlci5wbmcnLCAnRGVmYXVsdEFkZG9uUHJvZ3JhbS5wbmcnKQoKICAgICAgICBzZWxmLmVuZERpcmVjdG9yeSgpCgogICAgZGVmIGNmKHNlbGYpOgogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjA1MCwgJ2NsZWFyU291cmNlcycsICd0b29scy5wbmcnLCAnRGVmYXVsdEFkZG9uUHJvZ3JhbS5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjYwNCwgJ2NsZWFyQ2FjaGVTZWFyY2gnLCAndG9vbHMucG5nJywgJ0RlZmF1bHRBZGRvblByb2dyYW0ucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwNTIsICdjbGVhckNhY2hlJywgJ3Rvb2xzLnBuZycsICdEZWZhdWx0QWRkb25Qcm9ncmFtLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyNjE0LCAnY2xlYXJNZXRhQ2FjaGUnLCAndG9vbHMucG5nJywgJ0RlZmF1bHRBZGRvblByb2dyYW0ucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzI2MTMsICdjbGVhckFsbENhY2hlJywgJ3Rvb2xzLnBuZycsICdEZWZhdWx0QWRkb25Qcm9ncmFtLnBuZycpCgogICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKCiAgICBkZWYgbGlicmFyeShzZWxmKToKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzI1NTcsICdvcGVuU2V0dGluZ3MmcXVlcnk9NS4wJywgJ3Rvb2xzLnBuZycsICdEZWZhdWx0QWRkb25Qcm9ncmFtLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyNTU4LCAndXBkYXRlTGlicmFyeSZxdWVyeT10b29sJywgJ2xpYnJhcnlfdXBkYXRlLnBuZycsICdEZWZhdWx0QWRkb25Qcm9ncmFtLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyNTU5LCBjb250cm9sLnNldHRpbmcoJ2xpYnJhcnkubW92aWUnKSwgJ21vdmllcy5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnLCBpc0FjdGlvbj1GYWxzZSkKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzI1NjAsIGNvbnRyb2wuc2V0dGluZygnbGlicmFyeS50dicpLCAndHZzaG93cy5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJywgaXNBY3Rpb249RmFsc2UpCgogICAgICAgIGlmIHRyYWt0LmdldFRyYWt0Q3JlZGVudGlhbHNJbmZvKCk6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjU2MSwgJ21vdmllc1RvTGlicmFyeSZ1cmw9dHJha3Rjb2xsZWN0aW9uJywgJ3RyYWt0LnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjU2MiwgJ21vdmllc1RvTGlicmFyeSZ1cmw9dHJha3R3YXRjaGxpc3QnLCAndHJha3QucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyNTYzLCAndHZzaG93c1RvTGlicmFyeSZ1cmw9dHJha3Rjb2xsZWN0aW9uJywgJ3RyYWt0LnBuZycsICdEZWZhdWx0VFZTaG93cy5wbmcnKQogICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzI1NjQsICd0dnNob3dzVG9MaWJyYXJ5JnVybD10cmFrdHdhdGNobGlzdCcsICd0cmFrdC5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJykKCiAgICAgICAgc2VsZi5lbmREaXJlY3RvcnkoKQoKICAgIGRlZiBkb3dubG9hZHMoc2VsZik6CiAgICAgICAgbW92aWVfZG93bmxvYWRzID0gY29udHJvbC5zZXR0aW5nKCdtb3ZpZS5kb3dubG9hZC5wYXRoJykKICAgICAgICB0dl9kb3dubG9hZHMgPSBjb250cm9sLnNldHRpbmcoJ3R2LmRvd25sb2FkLnBhdGgnKQoKICAgICAgICBpZiBsZW4oY29udHJvbC5saXN0RGlyKG1vdmllX2Rvd25sb2FkcylbMF0pID4gMDoKICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDAxLCBtb3ZpZV9kb3dubG9hZHMsICdtb3ZpZXMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJywgaXNBY3Rpb249RmFsc2UpCiAgICAgICAgaWYgbGVuKGNvbnRyb2wubGlzdERpcih0dl9kb3dubG9hZHMpWzBdKSA+IDA6CiAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAwMiwgdHZfZG93bmxvYWRzLCAndHZzaG93cy5wbmcnLCAnRGVmYXVsdFRWU2hvd3MucG5nJywgaXNBY3Rpb249RmFsc2UpCgogICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKCgogICAgZGVmIHNlYXJjaChzZWxmKToKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMDEsICdtb3ZpZVNlYXJjaCcsICdzZWFyY2gucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMDIsICd0dlNlYXJjaCcsICdzZWFyY2gucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDI5LCAnbW92aWVQZXJzb24nLCAncGVvcGxlLXNlYXJjaC5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjAzMCwgJ3R2UGVyc29uJywgJ3Blb3BsZS1zZWFyY2gucG5nJywgJ0RlZmF1bHRUVlNob3dzLnBuZycpCgogICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKCiAgICBkZWYgdmlld3Moc2VsZik6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBjb250cm9sLmlkbGUoKQoKICAgICAgICAgICAgaXRlbXMgPSBbIChjb250cm9sLmxhbmcoMzIwMDEpLmVuY29kZSgndXRmLTgnKSwgJ21vdmllcycpLCAoY29udHJvbC5sYW5nKDMyMDAyKS5lbmNvZGUoJ3V0Zi04JyksICd0dnNob3dzJyksIChjb250cm9sLmxhbmcoMzIwNTQpLmVuY29kZSgndXRmLTgnKSwgJ3NlYXNvbnMnKSwgKGNvbnRyb2wubGFuZygzMjAzOCkuZW5jb2RlKCd1dGYtOCcpLCAnZXBpc29kZXMnKSBdCgogICAgICAgICAgICBzZWxlY3QgPSBjb250cm9sLnNlbGVjdERpYWxvZyhbaVswXSBmb3IgaSBpbiBpdGVtc10sIGNvbnRyb2wubGFuZygzMjA0OSkuZW5jb2RlKCd1dGYtOCcpKQoKICAgICAgICAgICAgaWYgc2VsZWN0ID09IC0xOiByZXR1cm4KCiAgICAgICAgICAgIGNvbnRlbnQgPSBpdGVtc1tzZWxlY3RdWzFdCgogICAgICAgICAgICB0aXRsZSA9IGNvbnRyb2wubGFuZygzMjA1OSkuZW5jb2RlKCd1dGYtOCcpCiAgICAgICAgICAgIHVybCA9ICclcz9hY3Rpb249YWRkVmlldyZjb250ZW50PSVzJyAlIChzeXMuYXJndlswXSwgY29udGVudCkKCiAgICAgICAgICAgIHBvc3RlciwgYmFubmVyLCBmYW5hcnQgPSBjb250cm9sLmFkZG9uUG9zdGVyKCksIGNvbnRyb2wuYWRkb25CYW5uZXIoKSwgY29udHJvbC5hZGRvbkZhbmFydCgpCgogICAgICAgICAgICBpdGVtID0gY29udHJvbC5pdGVtKGxhYmVsPXRpdGxlKQogICAgICAgICAgICBpdGVtLnNldEluZm8odHlwZT0nVmlkZW8nLCBpbmZvTGFiZWxzID0geyd0aXRsZSc6IHRpdGxlfSkKICAgICAgICAgICAgaXRlbS5zZXRBcnQoeydpY29uJzogcG9zdGVyLCAndGh1bWInOiBwb3N0ZXIsICdwb3N0ZXInOiBwb3N0ZXIsICdiYW5uZXInOiBiYW5uZXJ9KQogICAgICAgICAgICBpdGVtLnNldFByb3BlcnR5KCdGYW5hcnRfSW1hZ2UnLCBmYW5hcnQpCgogICAgICAgICAgICBjb250cm9sLmFkZEl0ZW0oaGFuZGxlPWludChzeXMuYXJndlsxXSksIHVybD11cmwsIGxpc3RpdGVtPWl0ZW0sIGlzRm9sZGVyPUZhbHNlKQogICAgICAgICAgICBjb250cm9sLmNvbnRlbnQoaW50KHN5cy5hcmd2WzFdKSwgY29udGVudCkKICAgICAgICAgICAgY29udHJvbC5kaXJlY3RvcnkoaW50KHN5cy5hcmd2WzFdKSwgY2FjaGVUb0Rpc2M9VHJ1ZSkKCiAgICAgICAgICAgIGZyb20gcmVzb3VyY2VzLmxpYi5tb2R1bGVzIGltcG9ydCB2aWV3cwogICAgICAgICAgICB2aWV3cy5zZXRWaWV3KGNvbnRlbnQsIHt9KQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgcmV0dXJuCgoKICAgIGRlZiBhY2NvdW50Q2hlY2soc2VsZik6CiAgICAgICAgaWYgdHJha3RDcmVkZW50aWFscyA9PSBGYWxzZSBhbmQgaW1kYkNyZWRlbnRpYWxzID09IEZhbHNlOgogICAgICAgICAgICBjb250cm9sLmlkbGUoKQogICAgICAgICAgICBjb250cm9sLmluZm9EaWFsb2coY29udHJvbC5sYW5nKDMyMDQyKS5lbmNvZGUoJ3V0Zi04JyksIHNvdW5kPVRydWUsIGljb249J1dBUk5JTkcnKQogICAgICAgICAgICBzeXMuZXhpdCgpCgoKICAgIGRlZiBpbmZvQ2hlY2soc2VsZiwgdmVyc2lvbik6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBjb250cm9sLmluZm9EaWFsb2coJycsIGNvbnRyb2wubGFuZygzMjA3NCkuZW5jb2RlKCd1dGYtOCcpLCB0aW1lPTUwMDAsIHNvdW5kPUZhbHNlKQogICAgICAgICAgICByZXR1cm4gJzEnCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICByZXR1cm4gJzEnCgoKICAgIGRlZiBjbGVhckNhY2hlKHNlbGYpOgogICAgICAgIGNvbnRyb2wuaWRsZSgpCiAgICAgICAgeWVzID0gY29udHJvbC55ZXNub0RpYWxvZyhjb250cm9sLmxhbmcoMzIwNTYpLmVuY29kZSgndXRmLTgnKSwgJycsICcnKQogICAgICAgIGlmIG5vdCB5ZXM6IHJldHVybgogICAgICAgIGZyb20gcmVzb3VyY2VzLmxpYi5tb2R1bGVzIGltcG9ydCBjYWNoZQogICAgICAgIGNhY2hlLmNhY2hlX2NsZWFyKCkKICAgICAgICBjb250cm9sLmluZm9EaWFsb2coY29udHJvbC5sYW5nKDMyMDU3KS5lbmNvZGUoJ3V0Zi04JyksIHNvdW5kPVRydWUsIGljb249J0lORk8nKQoKICAgIGRlZiBjbGVhckNhY2hlTWV0YShzZWxmKToKICAgICAgICBjb250cm9sLmlkbGUoKQogICAgICAgIHllcyA9IGNvbnRyb2wueWVzbm9EaWFsb2coY29udHJvbC5sYW5nKDMyMDU2KS5lbmNvZGUoJ3V0Zi04JyksICcnLCAnJykKICAgICAgICBpZiBub3QgeWVzOiByZXR1cm4KICAgICAgICBmcm9tIHJlc291cmNlcy5saWIubW9kdWxlcyBpbXBvcnQgY2FjaGUKICAgICAgICBjYWNoZS5jYWNoZV9jbGVhcl9tZXRhKCkKICAgICAgICBjb250cm9sLmluZm9EaWFsb2coY29udHJvbC5sYW5nKDMyMDU3KS5lbmNvZGUoJ3V0Zi04JyksIHNvdW5kPVRydWUsIGljb249J0lORk8nKQoKICAgIGRlZiBjbGVhckNhY2hlUHJvdmlkZXJzKHNlbGYpOgogICAgICAgIGNvbnRyb2wuaWRsZSgpCiAgICAgICAgeWVzID0gY29udHJvbC55ZXNub0RpYWxvZyhjb250cm9sLmxhbmcoMzIwNTYpLmVuY29kZSgndXRmLTgnKSwgJycsICcnKQogICAgICAgIGlmIG5vdCB5ZXM6IHJldHVybgogICAgICAgIGZyb20gcmVzb3VyY2VzLmxpYi5tb2R1bGVzIGltcG9ydCBjYWNoZQogICAgICAgIGNhY2hlLmNhY2hlX2NsZWFyX3Byb3ZpZGVycygpCiAgICAgICAgY29udHJvbC5pbmZvRGlhbG9nKGNvbnRyb2wubGFuZygzMjA1NykuZW5jb2RlKCd1dGYtOCcpLCBzb3VuZD1UcnVlLCBpY29uPSdJTkZPJykKCiAgICBkZWYgY2xlYXJDYWNoZVNlYXJjaChzZWxmKToKICAgICAgICBjb250cm9sLmlkbGUoKQogICAgICAgIGlmIGNvbnRyb2wueWVzbm9EaWFsb2coY29udHJvbC5sYW5nKDMyMDU2KS5lbmNvZGUoJ3V0Zi04JyksICcnLCAnJyk6CiAgICAgICAgICAgIGNvbnRyb2wuc2V0U2V0dGluZygndHZzZWFyY2gnLCAnJykKICAgICAgICAgICAgY29udHJvbC5zZXRTZXR0aW5nKCdtb3ZpZXNlYXJjaCcsICcnKQogICAgICAgICAgICBjb250cm9sLmluZm9EaWFsb2coY29udHJvbC5sYW5nKDMyMDU3KS5lbmNvZGUoJ3V0Zi04JyksIHNvdW5kPVRydWUsIGljb249J0lORk8nKQoKICAgIGRlZiBjbGVhckNhY2hlQWxsKHNlbGYpOgogICAgICAgIGNvbnRyb2wuaWRsZSgpCiAgICAgICAgeWVzID0gY29udHJvbC55ZXNub0RpYWxvZyhjb250cm9sLmxhbmcoMzIwNTYpLmVuY29kZSgndXRmLTgnKSwgJycsICcnKQogICAgICAgIGlmIG5vdCB5ZXM6IHJldHVybgogICAgICAgIGZyb20gcmVzb3VyY2VzLmxpYi5tb2R1bGVzIGltcG9ydCBjYWNoZQogICAgICAgIGNhY2hlLmNhY2hlX2NsZWFyX2FsbCgpCiAgICAgICAgY29udHJvbC5pbmZvRGlhbG9nKGNvbnRyb2wubGFuZygzMjA1NykuZW5jb2RlKCd1dGYtOCcpLCBzb3VuZD1UcnVlLCBpY29uPSdJTkZPJykKCiAgICBkZWYgYWRkRGlyZWN0b3J5SXRlbShzZWxmLCBuYW1lLCBxdWVyeSwgdGh1bWIsIGljb24sIGNvbnRleHQ9Tm9uZSwgcXVldWU9RmFsc2UsIGlzQWN0aW9uPVRydWUsIGlzRm9sZGVyPVRydWUpOgogICAgICAgIHRyeTogbmFtZSA9IGNvbnRyb2wubGFuZyhuYW1lKS5lbmNvZGUoJ3V0Zi04JykKICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICB1cmwgPSAnJXM/YWN0aW9uPSVzJyAlIChzeXNhZGRvbiwgcXVlcnkpIGlmIGlzQWN0aW9uID09IFRydWUgZWxzZSBxdWVyeQogICAgICAgIHRodW1iID0gb3MucGF0aC5qb2luKGFydFBhdGgsIHRodW1iKSBpZiBub3QgYXJ0UGF0aCA9PSBOb25lIGVsc2UgaWNvbgogICAgICAgIGNtID0gW10KICAgICAgICBjbS5hcHBlbmQoKCcxM0Nsb3ducyBTZXR0aW5ncycsICdSdW5QbHVnaW4oJXM/YWN0aW9uPW9wZW5TZXR0aW5ncyZxdWVyeT0oMCwwKSknICUgc3lzYWRkb24pKQogICAgICAgIGlmIHF1ZXVlID09IFRydWU6IGNtLmFwcGVuZCgocXVldWVNZW51LCAnUnVuUGx1Z2luKCVzP2FjdGlvbj1xdWV1ZUl0ZW0pJyAlIHN5c2FkZG9uKSkKICAgICAgICBpZiBub3QgY29udGV4dCA9PSBOb25lOiBjbS5hcHBlbmQoKGNvbnRyb2wubGFuZyhjb250ZXh0WzBdKS5lbmNvZGUoJ3V0Zi04JyksICdSdW5QbHVnaW4oJXM/YWN0aW9uPSVzKScgJSAoc3lzYWRkb24sIGNvbnRleHRbMV0pKSkKICAgICAgICBpdGVtID0gY29udHJvbC5pdGVtKGxhYmVsPW5hbWUpCiAgICAgICAgaXRlbS5hZGRDb250ZXh0TWVudUl0ZW1zKGNtKQogICAgICAgIGl0ZW0uc2V0QXJ0KHsnaWNvbic6IHRodW1iLCAndGh1bWInOiB0aHVtYn0pCiAgICAgICAgaWYgbm90IGFkZG9uRmFuYXJ0ID09IE5vbmU6IGl0ZW0uc2V0UHJvcGVydHkoJ0ZhbmFydF9JbWFnZScsIGFkZG9uRmFuYXJ0KQogICAgICAgIGNvbnRyb2wuYWRkSXRlbShoYW5kbGU9c3lzaGFuZGxlLCB1cmw9dXJsLCBsaXN0aXRlbT1pdGVtLCBpc0ZvbGRlcj1pc0ZvbGRlcikKIAogICAgZGVmIGNvbGxlY3Rpb25BY3RvcnMoc2VsZik6CiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdQWRhbSBTYW5kbGVyWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1hZGFtc2FuZGxlcicsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXUFsIFBhY2lub1svQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9YWxwYWNpbm8nLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1BbGFuIFJpY2ttYW5bL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPWFsYW5yaWNrbWFuJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdQW50aG9ueSBIb3BraW5zWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1hbnRob255aG9wa2lucycsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXUFuZ2VsaW5hIEpvbGllWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1hbmdlbGluYWpvbGllJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdQXJub2xkIFNjaHdhcnplbmVnZ2VyWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1hcm5vbGRzY2h3YXJ6ZW5lZ2dlcicsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXUNoYXJsaXplIFRoZXJvblsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9Y2hhcmxpemV0aGVyb24nLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1DbGludCBFYXN0d29vZFsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9Y2xpbnRlYXN0d29vZCcsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXURlbWkgTW9vcmVbL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPWRlbWltb29yZScsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXURlbnplbCBXYXNoaW5ndG9uWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1kZW56ZWx3YXNoaW5ndG9uJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdRWRkaWUgTXVycGh5Wy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1lZGRpZW11cnBoeScsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXUVsdmlzIFByZXNsZXlbL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPWVsdmlzcHJlc2xleScsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXUdlbmUgV2lsZGVyWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1nZW5ld2lsZGVyJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdR2VyYXJkIEJ1dGxlclsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9Z2VyYXJkYnV0bGVyJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdR29sZGllIEhhd25bL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPWdvbGRpZWhhd24nLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1KYXNvbiBTdGF0aGFtWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1qYXNvbnN0YXRoYW0nLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1KZWFuLUNsYXVkZSBWYW4gRGFtbWVbL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPWplYW5jbGF1ZGV2YW5kYW1tZScsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXUplZmZyZXkgRGVhbiBNb3JnYW5bL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPWplZmZyZXlkZWFubW9yZ2FuJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdSm9obiBUcmF2b2x0YVsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9am9obnRyYXZvbHRhJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdSm9obm55IERlcHBbL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPWpvaG5ueWRlcHAnLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1KdWxpYSBSb2JlcnRzWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1qdWxpYXJvYmVydHMnLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1LZXZpbiBDb3N0bmVyWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1rZXZpbmNvc3RuZXInLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1MaWFtIE5lZXNvblsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9bGlhbW5lZXNvbicsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXU1lbCBHaWJzb25bL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPW1lbGdpYnNvbicsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXU1lbGlzc2EgTWNDYXJ0aHlbL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPW1lbGlzc2FtY2NhcnRoeScsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXU1lcnlsIFN0cmVlcFsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9bWVyeWxzdHJlZXAnLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1NaWNoZWxsZSBQZmVpZmZlclsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9bWljaGVsbGVwZmVpZmZlcicsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXU5pY29sYXMgQ2FnZVsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9bmljb2xhc2NhZ2UnLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1OaWNvbGUgS2lkbWFuWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1uaWNvbGVraWRtYW4nLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1QYXVsIE5ld21hblsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9cGF1bG5ld21hbicsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXVJlZXNlIFdpdGhlcnNwb29uWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1yZWVzZXdpdGhlcnNwb29uJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdUm9iZXJ0IERlIE5pcm9bL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPXJvYmVydGRlbmlybycsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXVNhbXVlbCBMIEphY2tzb25bL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPXNhbXVlbGphY2tzb24nLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1TZWFuIENvbm5lcnlbL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPXNlYW5jb25uZXJ5JywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdU2NhcmxldHQgSm9oYW5zc29uWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1zY2FybGV0dGpvaGFuc3NvbicsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnW0NPTE9SIHdoaXRlXVtCXVNoYXJvbiBTdG9uZVsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9c2hhcm9uc3RvbmUnLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1TaWdvdXJuZXkgV2VhdmVyWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1zaWdvdXJuZXl3ZWF2ZXInLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1TdGV2ZW4gU2VhZ2FsWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD1zdGV2ZW5zZWFnYWwnLCAnY29sbGVjdGlvbmFjdG9ycy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1tDT0xPUiB3aGl0ZV1bQl1Ub20gSGFua3NbL0JdWy9DT0xPUl0nLCAnY29sbGVjdGlvbnMmdXJsPXRvbWhhbmtzJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdVmluIERpZXNlbFsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9dmluZGllc2VsJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdV2VzbGV5IFNuaXBlc1svQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9d2VzbGV5c25pcGVzJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdV2lsbCBTbWl0aFsvQl1bL0NPTE9SXScsICdjb2xsZWN0aW9ucyZ1cmw9d2lsbHNtaXRoJywgJ2NvbGxlY3Rpb25hY3RvcnMucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdbQ09MT1Igd2hpdGVdW0JdV2lub25hIFJ5ZGVyWy9CXVsvQ09MT1JdJywgJ2NvbGxlY3Rpb25zJnVybD13aW5vbmFyeWRlcicsICdjb2xsZWN0aW9uYWN0b3JzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQoKICAgICAgICBzZWxmLmVuZERpcmVjdG9yeSgpCiAgICAKCiAgICBkZWYgY29sbGVjdGlvbkJveHNldChzZWxmKToKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJzQ4IEhycy4gKDE5ODItMTk5MCknLCAnY29sbGVjdGlvbnMmdXJsPWZvcnR5ZWlnaHRob3VycycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQWNlIFZlbnR1cmEgKDE5OTQtMTk5NSknLCAnY29sbGVjdGlvbnMmdXJsPWFjZXZlbnR1cmEnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0FpcnBsYW5lICgxOTgwLTE5ODIpJywgJ2NvbGxlY3Rpb25zJnVybD1haXJwbGFuZScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQWlycG9ydCAoMTk3MC0xOTc5KScsICdjb2xsZWN0aW9ucyZ1cmw9YWlycG9ydCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQW1lcmljYW4gR3JhZmZpdGkgKDE5NzMtMTk3OSknLCAnY29sbGVjdGlvbnMmdXJsPWFtZXJpY2FuZ3JhZmZpdGknLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0FuYWNvbmRhICgxOTk3LTIwMDQpJywgJ2NvbGxlY3Rpb25zJnVybD1hbmFjb25kYScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQW5hbHl6ZSBUaGlzICgxOTk5LTIwMDIpJywgJ2NvbGxlY3Rpb25zJnVybD1hbmFseXpldGhpcycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQW5jaG9ybWFuICgyMDA0LTIwMTMpJywgJ2NvbGxlY3Rpb25zJnVybD1hbmNob3JtYW4nLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0F1c3RpbiBQb3dlcnMgKDE5OTctMjAwMiknLCAnY29sbGVjdGlvbnMmdXJsPWF1c3RpbnBvd2VycycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQmFjayB0byB0aGUgRnV0dXJlICgxOTg1LTE5OTApJywgJ2NvbGxlY3Rpb25zJnVybD1iYWNrdG90aGVmdXR1cmUnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0JhZCBCb3lzICgxOTk1LTIwMDMpJywgJ2NvbGxlY3Rpb25zJnVybD1iYWRib3lzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdCYWQgU2FudGEgKDIwMDMtMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPWJhZHNhbnRhJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdCYXNpYyBJbnN0aW5jdCAoMTk5Mi0yMDA2KScsICdjb2xsZWN0aW9ucyZ1cmw9YmFzaWNpbnN0aW5jdCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQmV2ZXJseSBIaWxscyBDb3AgKDE5ODQtMTk5NCknLCAnY29sbGVjdGlvbnMmdXJsPWJldmVybHloaWxsc2NvcCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQmlnIE1vbW1hcyBIb3VzZSAoMjAwMC0yMDExKScsICdjb2xsZWN0aW9ucyZ1cmw9YmlnbW9tbWFzaG91c2UnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0JsdWVzIEJyb3RoZXJzICgxOTgwLTE5OTgpJywgJ2NvbGxlY3Rpb25zJnVybD1ibHVlc2Jyb3RoZXJzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdCb3VybmUgKDIwMDItMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPWJvdXJuZScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQnJ1Y2UgQWxtaWdodHkgKDIwMDMtMjAwNyknLCAnY29sbGVjdGlvbnMmdXJsPWJydWNlYWxtaWdodHknLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0NhZGR5c2hhY2sgKDE5ODAtMTk4OCknLCAnY29sbGVjdGlvbnMmdXJsPWNhZGR5c2hhY2snLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0NoZWFwZXIgYnkgdGhlIERvemVuICgyMDAzLTIwMDUpJywgJ2NvbGxlY3Rpb25zJnVybD1jaGVhcGVyYnl0aGVkb3plbicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQ2hlZWNoIGFuZCBDaG9uZyAoMTk3OC0xOTg0KScsICdjb2xsZWN0aW9ucyZ1cmw9Y2hlZWNoYW5kY2hvbmcnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0NoaWxkcyBQbGF5ICgxOTg4LTIwMDQpJywgJ2NvbGxlY3Rpb25zJnVybD1jaGlsZHNwbGF5JywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdDaXR5IFNsaWNrZXJzICgxOTkxLTE5OTQpJywgJ2NvbGxlY3Rpb25zJnVybD1jaXR5c2xpY2tlcnMnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0NvbmFuICgxOTgyLTIwMTEpJywgJ2NvbGxlY3Rpb25zJnVybD1jb25hbicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQ3JhbmsgKDIwMDYtMjAwOSknLCAnY29sbGVjdGlvbnMmdXJsPWNyYW5rJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdDcm9jb2RpbGUgRHVuZGVlICgxOTg2LTIwMDEpJywgJ2NvbGxlY3Rpb25zJnVybD1jcm9kaWxlZHVuZGUnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0RhIFZpbmNpIENvZGUgKDIwMDYtMjAxNyknLCAnY29sbGVjdGlvbnMmdXJsPWRhdmluY2ljb2RlJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdEYWRkeSBEYXkgQ2FyZSAoMjAwMy0yMDA3KScsICdjb2xsZWN0aW9ucyZ1cmw9ZGFkZHlkYXljYXJlJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdEZWF0aCBXaXNoICgxOTc0LTE5OTQpJywgJ2NvbGxlY3Rpb25zJnVybD1kZWF0aHdpc2gnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0RlbHRhIEZvcmNlICgxOTg2LTE5OTApJywgJ2NvbGxlY3Rpb25zJnVybD1kZWx0YWZvcmNlJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdEaWUgSGFyZCAoMTk4OC0yMDEzKScsICdjb2xsZWN0aW9ucyZ1cmw9ZGllaGFyZCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnRGlydHkgRGFuY2luZyAoMTk4Ny0yMDA0KScsICdjb2xsZWN0aW9ucyZ1cmw9ZGlydHlkYW5jaW5nJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdEaXJ0eSBIYXJyeSAoMTk3MS0xOTg4KScsICdjb2xsZWN0aW9ucyZ1cmw9ZGlydHloYXJyeScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnRHVtYiBhbmQgRHVtYmVyICgxOTk0LTIwMTQpJywgJ2NvbGxlY3Rpb25zJnVybD1kdW1iYW5kZHVtYmVyJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdFc2NhcGUgZnJvbSBOZXcgWW9yayAoMTk4MS0xOTk2KScsICdjb2xsZWN0aW9ucyZ1cmw9ZXNjYXBlZnJvbW5ld3lvcmsnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0V2ZXJ5IFdoaWNoIFdheSBCdXQgTG9vc2UgKDE5NzgtMTk4MCknLCAnY29sbGVjdGlvbnMmdXJsPWV2ZXJ5d2hpY2h3YXlidXRsb29zZScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnRXhvcmNpc3QgKDE5NzMtMjAwNSknLCAnY29sbGVjdGlvbnMmdXJsPWV4b3JjaXN0JywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdUaGUgRXhwZW5kYWJsZXMgKDIwMTAtMjAxNCknLCAnY29sbGVjdGlvbnMmdXJsPXRoZWV4cGVuZGFibGVzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdGYXN0IGFuZCB0aGUgRnVyaW91cyAoMjAwMS0yMDE3KScsICdjb2xsZWN0aW9ucyZ1cmw9ZmFzdGFuZHRoZWZ1cmlvdXMnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0ZhdGhlciBvZiB0aGUgQnJpZGUgKDE5OTEtMTk5NSknLCAnY29sbGVjdGlvbnMmdXJsPWZhdGhlcm9mdGhlYnJpZGUnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0ZsZXRjaCAoMTk4NS0xOTg5KScsICdjb2xsZWN0aW9ucyZ1cmw9ZmxldGNoJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdGcmlkYXkgKDE5OTUtMjAwMiknLCAnY29sbGVjdGlvbnMmdXJsPWZyaWRheScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnRnJpZGF5IHRoZSAxM3RoICgxOTgwLTIwMDkpJywgJ2NvbGxlY3Rpb25zJnVybD1mcmlkYXl0aGUxM3RoJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdGdWdpdGl2ZSAoMTk5My0xOTk4KScsICdjb2xsZWN0aW9ucyZ1cmw9ZnVnaXRpdmUnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0cuSS4gSm9lICgyMDA5LTIwMTMpJywgJ2NvbGxlY3Rpb25zJnVybD1naWpvZScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnR2V0IFNob3J0eSAoMTk5NS0yMDA1KScsICdjb2xsZWN0aW9ucyZ1cmw9Z2V0c2hvcnR5JywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdHZXR0eXNidXJnICgxOTkzLTIwMDMpJywgJ2NvbGxlY3Rpb25zJnVybD1nZXR0eXNidXJnJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdHaG9zdCBSaWRlciAoMjAwNy0yMDExKScsICdjb2xsZWN0aW9ucyZ1cmw9Z2hvc3RyaWRlcicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnR2hvc3RidXN0ZXJzICgxOTg0LTIwMTYpJywgJ2NvbGxlY3Rpb25zJnVybD1naG9zdGJ1c3RlcnMnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0dvZHMgTm90IERlYWQgKDIwMTQtMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPWdvZHNub3RkZWFkJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdHb2RmYXRoZXIgKDE5NzItMTk5MCknLCAnY29sbGVjdGlvbnMmdXJsPWdvZGZhdGhlcicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnR29kemlsbGEgKDE5NTYtMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPWdvZHppbGxhJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdHcm93biBVcHMgKDIwMTAtMjAxMyknLCAnY29sbGVjdGlvbnMmdXJsPWdyb3dudXBzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdHcnVtcHkgT2xkIE1lbiAoMjAxMC0yMDEzKScsICdjb2xsZWN0aW9ucyZ1cmw9Z3J1bXB5b2xkbWVuJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdHdW5zIG9mIE5hdmFyb25lICgxOTYxLTE5NzgpJywgJ2NvbGxlY3Rpb25zJnVybD1ndW5zb2ZuYXZhcm9uZScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSGFsbG93ZWVuICgxOTc4LTIwMDkpJywgJ2NvbGxlY3Rpb25zJnVybD1oYWxsb3dlZW4nLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0hhbmdvdmVyICgyMDA5LTIwMTMpJywgJ2NvbGxlY3Rpb25zJnVybD1oYW5nb3ZlcicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSGFubmliYWwgTGVjdG9yICgxOTg2LTIwMDcpJywgJ2NvbGxlY3Rpb25zJnVybD1oYW5uaWJhbGxlY3RvcicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSGVsbHJhaXNlciAoMTk4Ny0xOTk2KScsICdjb2xsZWN0aW9ucyZ1cmw9aGVsbHJhaXNlcicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSG9uZXkgSSBTaHJ1bmsgdGhlIEtpZHMgKDE5ODktMTk5NSknLCAnY29sbGVjdGlvbnMmdXJsPWhvbmV5aXNocnVua3RoZWtpZHMnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0hvcnJpYmxlIEJvc3NlcyAoMjAxMS0yMDE0KScsICdjb2xsZWN0aW9ucyZ1cmw9aG9ycmlibGVib3NzZXMnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0hvc3RlbCAoMjAwNS0yMDExKScsICdjb2xsZWN0aW9ucyZ1cmw9aG9zdGVsJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdIb3QgU2hvdHMgKDE5OTEtMTk5NiknLCAnY29sbGVjdGlvbnMmdXJsPWhvdHNob3RzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdJbmRlcGVuZGVuY2UgRGF5ICgxOTk2LTIwMTYpJywgJ2NvbGxlY3Rpb25zJnVybD1pbmRlcGVuZGVuY2VkYXknLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0luZGlhbmEgSm9uZXMgKDE5ODEtMjAwOCknLCAnY29sbGVjdGlvbnMmdXJsPWluZGlhbmFqb25lcycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSW5zaWRpb3VzICgyMDEwLTIwMTUpJywgJ2NvbGxlY3Rpb25zJnVybD1pbnNpZGlvdXMnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0lyb24gRWFnbGUgKDE5ODYtMTk5MiknLCAnY29sbGVjdGlvbnMmdXJsPWlyb25lYWdsZScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSmFjayBSZWFjaGVyICgyMDEyLTIwMTYpJywgJ2NvbGxlY3Rpb25zJnVybD1qYWNrcmVhY2hlcicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSmFjayBSeWFuICgxOTkwLTIwMTQpJywgJ2NvbGxlY3Rpb25zJnVybD1qYWNrcnlhbicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSmFja2FzcyAoMjAwMi0yMDEzKScsICdjb2xsZWN0aW9ucyZ1cmw9amFja2FzcycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSmFtZXMgQm9uZCAoMTk2My0yMDE1KScsICdjb2xsZWN0aW9ucyZ1cmw9amFtZXNib25kJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdKYXdzICgxOTc1LTE5ODcpJywgJ2NvbGxlY3Rpb25zJnVybD1qYXdzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdKZWVwZXJzIENyZWVwZXJzICgyMDAxLTIwMTcpJywgJ2NvbGxlY3Rpb25zJnVybD1qZWVwZXJzY3JlZXBlcnMnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0pvaG4gV2ljayAoMjAxNC0yMDE3KScsICdjb2xsZWN0aW9ucyZ1cmw9am9obndpY2snLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0p1bWFuamkgKDE5OTUtMjAwNSknLCAnY29sbGVjdGlvbnMmdXJsPWp1bWFuamknLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0p1cmFzc2ljIFBhcmsgKDE5OTMtMjAxNSknLCAnY29sbGVjdGlvbnMmdXJsPWp1cmFzc2ljcGFyaycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0tpY2stQXNzICgyMDEwLTIwMTMpJywgJ2NvbGxlY3Rpb25zJnVybD1raWNrYXNzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdLaWxsIEJpbGwgKDIwMDMtMjAwNCknLCAnY29sbGVjdGlvbnMmdXJsPWtpbGxiaWxsJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdLaW5nIEtvbmcgKDE5MzMtMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPWtpbmdrb25nJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdMYXJhIENyb2Z0ICgyMDAxLTIwMDMpJywgJ2NvbGxlY3Rpb25zJnVybD1sYXJhY3JvZnQnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0xlZ2FsbHkgQmxvbmRlICgyMDAxLTIwMDMpJywgJ2NvbGxlY3Rpb25zJnVybD1sZWdhbGx5YmxvbmRlJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdMZXRoYWwgV2VhcG9uICgxOTg3LTE5OTgpJywgJ2NvbGxlY3Rpb25zJnVybD1sZWF0aGFsd2VhcG9uJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdMb29rIFdob3MgVGFsa2luZyAoMTk4OS0xOTkzKScsICdjb2xsZWN0aW9ucyZ1cmw9bG9va3dob3N0YWxraW5nJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdNYWNoZXRlICgyMDEwLTIwMTMpJywgJ2NvbGxlY3Rpb25zJnVybD1tYWNoZXRlJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdNYWdpYyBNaWtlICgyMDEyLTIwMTUpJywgJ2NvbGxlY3Rpb25zJnVybD1tYWdpY21pa2UnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ01ham9yIExlYWd1ZSAoMTk4OS0xOTk4KScsICdjb2xsZWN0aW9ucyZ1cmw9bWFqb3JsZWFndWUnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ01hbiBmcm9tIFNub3d5IFJpdmVyICgxOTgyLTE5ODgpJywgJ2NvbGxlY3Rpb25zJnVybD1tYW5mcm9tc25vd3lyaXZlcicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnTWFzayAoMTk5NC0yMDA1KScsICdjb2xsZWN0aW9ucyZ1cmw9bWFzaycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnTWF0cml4ICgxOTk5LTIwMDMpJywgJ2NvbGxlY3Rpb25zJnVybD1tYXRyaXgnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RoZSBNZWNoYW5pYyAoMjAxMS0yMDE2KScsICdjb2xsZWN0aW9ucyZ1cmw9dGhlbWVjaGFuaWMnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ01lZXQgdGhlIFBhcmVudHMgKDIwMDAtMjAxMCknLCAnY29sbGVjdGlvbnMmdXJsPW1lZXR0aGVwYXJlbnRzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdNZW4gaW4gQmxhY2sgKDE5OTctMjAxMiknLCAnY29sbGVjdGlvbnMmdXJsPW1lbmluYmxhY2snLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ01pZ2h0eSBEdWNrcyAoMTk5NS0xOTk2KScsICdjb2xsZWN0aW9ucyZ1cmw9bWlnaHR5ZHVja3MnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ01pc3MgQ29uZ2VuaWFsaXR5ICgyMDAwLTIwMDUpJywgJ2NvbGxlY3Rpb25zJnVybD1taXNzY29uZ2VuaWFsaXR5JywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdNaXNzaW5nIGluIEFjdGlvbiAoMTk4NC0xOTg4KScsICdjb2xsZWN0aW9ucyZ1cmw9bWlzc2luZ2luYWN0aW9uJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdNaXNzaW9uIEltcG9zc2libGUgKDE5OTYtMjAxNSknLCAnY29sbGVjdGlvbnMmdXJsPW1pc3Npb25pbXBvc3NpYmxlJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdOYWtlZCBHdW4gKDE5ODgtMTk5NCknLCAnY29sbGVjdGlvbnMmdXJsPW5ha2VkZ3VuJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdOYXRpb25hbCBMYW1wb29uICgxOTc4LTIwMDYpJywgJ2NvbGxlY3Rpb25zJnVybD1uYXRpb25hbGxhbXBvb24nLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ05hdGlvbmFsIExhbXBvb25zIFZhY2F0aW9uICgxOTgzLTIwMTUpJywgJ2NvbGxlY3Rpb25zJnVybD1uYXRpb25hbGxhbXBvb25zdmFjYXRpb24nLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ05hdGlvbmFsIFRyZWFzdXJlICgyMDA0LTIwMDcpJywgJ2NvbGxlY3Rpb25zJnVybD1uYXRpb25hbHRyZWFzdXJlJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdOZWlnaGJvcnMgKDIwMTQtMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPW5laWdoYm9ycycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnTmlnaHQgYXQgdGhlIE11c2V1bSAoMjAwNi0yMDE0KScsICdjb2xsZWN0aW9ucyZ1cmw9bmlnaHRhdHRoZW11c2V1bScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnTmlnaHRtYXJlIG9uIEVsbSBTdHJlZXQgKDE5ODQtMjAxMCknLCAnY29sbGVjdGlvbnMmdXJsPW5pZ2h0bWFyZW9uZWxtc3RyZWV0JywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdOb3cgWW91IFNlZSBNZSAoMjAxMy0yMDE2KScsICdjb2xsZWN0aW9ucyZ1cmw9bm93eW91c2VlbWUnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ051dHR5IFByb2Zlc3NvciAoMTk5Ni0yMDAwKScsICdjb2xsZWN0aW9ucyZ1cmw9bnV0dHlwcm9mZXNzb3InLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ09jZWFucyBFbGV2ZW4gKDIwMDEtMjAwNyknLCAnY29sbGVjdGlvbnMmdXJsPW9jZWFuc2VsZXZlbicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnT2RkIENvdXBsZSAoMTk2OC0xOTk4KScsICdjb2xsZWN0aW9ucyZ1cmw9b2RkY291cGxlJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdPaCwgR29kICgxOTc3LTE5ODQpJywgJ2NvbGxlY3Rpb25zJnVybD1vaGdvZCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnT2x5bXB1cyBIYXMgRmFsbGVuICgyMDEzLTIwMTYpJywgJ2NvbGxlY3Rpb25zJnVybD1vbHltcHVzaGFzZmFsbGVuJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdPbWVuICgxOTc2LTE5ODEpJywgJ2NvbGxlY3Rpb25zJnVybD1vbWVuJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdQYXVsIEJsYXJ0IE1hbGwgQ29wICgyMDA5LTIwMTUpJywgJ2NvbGxlY3Rpb25zJnVybD1wYXVsYmxhcnQnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1BpcmF0ZXMgb2YgdGhlIENhcmliYmVhbiAoMjAwMy0yMDE3KScsICdjb2xsZWN0aW9ucyZ1cmw9cGlyYXRlc29mdGhlY2FyaWJiZWFuJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdQbGFuZXQgb2YgdGhlIEFwZXMgKDE5NjgtMjAxNCknLCAnY29sbGVjdGlvbnMmdXJsPXBsYW5ldG9mdGhlYXBlcycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnUG9saWNlIEFjYWRlbXkgKDE5ODQtMTk5NCknLCAnY29sbGVjdGlvbnMmdXJsPXBvbGljZWFjYWRlbXknLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1BvbHRlcmdlaXN0ICgxOTgyLTE5ODgpJywgJ2NvbGxlY3Rpb25zJnVybD1wb3N0ZXJnZWlzdCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnUG9ya3lzICgxOTgxLTE5ODUpJywgJ2NvbGxlY3Rpb25zJnVybD1wb3JreXMnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1ByZWRhdG9yICgxOTg3LTIwMTApJywgJ2NvbGxlY3Rpb25zJnVybD1wcmVkYXRvcicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnVGhlIFB1cmdlICgyMDEzLTIwMTYpJywgJ2NvbGxlY3Rpb25zJnVybD10aGVwdXJnZScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnUmFtYm8gKDE5ODItMjAwOCknLCAnY29sbGVjdGlvbnMmdXJsPXJhbWJvJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdSRUQgKDIwMTAtMjAxMyknLCAnY29sbGVjdGlvbnMmdXJsPXJlZCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnUmV2ZW5nZSBvZiB0aGUgTmVyZHMgKDE5ODQtMTk4NyknLCAnY29sbGVjdGlvbnMmdXJsPXJldmVuZ2VvZnRoZW5lcmRzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdSaWRkaWNrICgyMDAwLTIwMTMpJywgJ2NvbGxlY3Rpb25zJnVybD1yaWRkaWNrJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdSaWRlIEFsb25nICgyMDE0LTIwMTYpJywgJ2NvbGxlY3Rpb25zJnVybD1yaWRlYWxvbmcnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RoZSBSaW5nICgyMDAyLTIwMTcpJywgJ2NvbGxlY3Rpb25zJnVybD10aGVyaW5nJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdSb2JvQ29wICgxOTg3LTE5OTMpJywgJ2NvbGxlY3Rpb25zJnVybD1yb2JvY29wJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdSb2NreSAoMTk3Ni0yMDE1KScsICdjb2xsZWN0aW9ucyZ1cmw9cm9ja3knLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1JvbWFuY2luZyB0aGUgU3RvbmUgKDE5ODQtMTk4NSknLCAnY29sbGVjdGlvbnMmdXJsPXJvbWFuY2luZ3RoZXN0b25lJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdSdXNoIEhvdXIgKDE5OTgtMjAwNyknLCAnY29sbGVjdGlvbnMmdXJsPXJ1c2hob3VyJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdTYW50YSBDbGF1c2UgKDE5OTQtMjAwNiknLCAnY29sbGVjdGlvbnMmdXJsPXNhbnRhY2xhdXNlJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdTYXcgKDIwMDQtMjAxMCknLCAnY29sbGVjdGlvbnMmdXJsPXNhdycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnU2V4IGFuZCB0aGUgQ2l0eSAoMjAwOC0yMDEwKScsICdjb2xsZWN0aW9ucyZ1cmw9c2V4YW5kdGhlY2l0eScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnU2hhZnQgKDE5NzEtMjAwMCknLCAnY29sbGVjdGlvbnMmdXJsPXNoYWZ0JywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdTaGFuZ2hhaSBOb29uICgyMDAwLTIwMDMpJywgJ2NvbGxlY3Rpb25zJnVybD1zaGFuZ2hhaW5vb24nLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1NpbiBDaXR5ICgyMDA1LTIwMTQpJywgJ2NvbGxlY3Rpb25zJnVybD1zaW5jaXR5JywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdTaW5pc3RlciAoMjAxMi0yMDE1KScsICdjb2xsZWN0aW9ucyZ1cmw9c2luaXN0ZXInLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1Npc3RlciBBY3QgKDE5OTUtMTk5MyknLCAnY29sbGVjdGlvbnMmdXJsPXNpc3RlcmFjdCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnU21va2V5IGFuZCB0aGUgQmFuZGl0ICgxOTc3LTE5ODYpJywgJ2NvbGxlY3Rpb25zJnVybD1zbW9rZXlhbmR0aGViYW5kaXQnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1NwZWVkICgxOTk0LTE5OTcpJywgJ2NvbGxlY3Rpb25zJnVybD1zcGVlZCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnU3Rha2VvdXQgKDE5ODctMTk5MyknLCAnY29sbGVjdGlvbnMmdXJsPXN0YWtlb3V0JywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdTdGFyIFRyZWsgKDE5NzktMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPXN0YXJ0cmVrJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdTdGFyIFdhcnMgKDE5NzctMjAxNSknLCAnY29sbGVjdGlvbnMmdXJsPXN0YXJ3YXJzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdUaGUgU3RpbmcgKDE5NzMtMTk4MyknLCAnY29sbGVjdGlvbnMmdXJsPXRoZXN0aW5nJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdUYWtlbiAoMjAwOC0yMDE0KScsICdjb2xsZWN0aW9ucyZ1cmw9dGFrZW4nLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RheGkgKDE5OTgtMjAwNyknLCAnY29sbGVjdGlvbnMmdXJsPXRheGknLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RlZCAoMjAxMi0yMDE1KScsICdjb2xsZWN0aW9ucyZ1cmw9dGVkJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdUZWVuIFdvbGYgKDE5ODUtMTk4NyknLCAnY29sbGVjdGlvbnMmdXJsPXRlZW53b2xmJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdUZXJtaW5hdG9yICgxOTg0LTIwMTUpJywgJ2NvbGxlY3Rpb25zJnVybD10ZXJtaW5hdG9yJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdUZXJtcyBvZiBFbmRlYXJtZW50ICgxOTgzLTE5OTYpJywgJ2NvbGxlY3Rpb25zJnVybD10ZXJtc29mZW5kZWFybWVudCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnVGV4YXMgQ2hhaW5zYXcgTWFzc2FjcmUgKDE5NzQtMjAxMyknLCAnY29sbGVjdGlvbnMmdXJsPXRleGFzY2hhaW5zYXdtYXNzYWNyZScsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnVGhlIFRoaW5nICgxOTgyLTIwMTEpJywgJ2NvbGxlY3Rpb25zJnVybD10aGV0aGluZycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnVGhvbWFzIENyb3duIEFmZmFpciAoMTk2OC0xOTk5KScsICdjb2xsZWN0aW9ucyZ1cmw9dGhvbWFzY3Jvd25hZmZhaXInLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RyYW5zcG9ydGVyICgyMDAyLTIwMTUpJywgJ2NvbGxlY3Rpb25zJnVybD10cmFuc3BvcnRlcicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnVW5kZXIgU2llZ2UgKDE5OTItMTk5NSknLCAnY29sbGVjdGlvbnMmdXJsPXVuZGVyc2llZ2UnLCAnY29sbGVjdGlvbmJveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1VuaXZlcnNhbCBTb2xkaWVyICgxOTkyLTIwMTIpJywgJ2NvbGxlY3Rpb25zJnVybD11bml2ZXJzYWxzb2xkaWVyJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdXYWxsIFN0cmVldCAoMTk4Ny0yMDEwKScsICdjb2xsZWN0aW9ucyZ1cmw9d2FsbHN0cmVldCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnV2F5bmVzIFdvcmxkICgxOTkyLTE5OTMpJywgJ2NvbGxlY3Rpb25zJnVybD13YXluZXN3b3JsZCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnV2Vla2VuZCBhdCBCZXJuaWVzICgxOTg5LTE5OTMpJywgJ2NvbGxlY3Rpb25zJnVybD13ZWVrZW5kYXRiZXJuaWVzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdXaG9sZSBOaW5lIFlhcmRzICgyMDAwLTIwMDQpJywgJ2NvbGxlY3Rpb25zJnVybD13aG9sZW5pbmV5YXJkcycsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnWC1GaWxlcyAoMTk5OC0yMDA4KScsICdjb2xsZWN0aW9ucyZ1cmw9eGZpbGVzJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCd4WHggKDIwMDItMjAwNSknLCAnY29sbGVjdGlvbnMmdXJsPXh4eCcsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnWW91bmcgR3VucyAoMTk4OC0xOTkwKScsICdjb2xsZWN0aW9ucyZ1cmw9eW91bmdndW5zJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdab29sYW5kZXIgKDIwMDEtMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPXpvb2xhbmRlcicsICdjb2xsZWN0aW9uYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnWm9ycm8gKDE5OTgtMjAwNSknLCAnY29sbGVjdGlvbnMmdXJsPXpvcnJvJywgJ2NvbGxlY3Rpb25ib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCgogICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKCgogICAgZGVmIGNvbGxlY3Rpb25LaWRzKHNlbGYpOgogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnRGlzbmV5IENvbGxlY3Rpb24nLCAnY29sbGVjdGlvbnMmdXJsPWRpc25leW1vdmllcycsICdjb2xsZWN0aW9uZGlzbmV5LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnS2lkcyBCb3hzZXQgQ29sbGVjdGlvbicsICdjb2xsZWN0aW9uQm94c2V0S2lkcycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0tpZHMgTW92aWUgQ29sbGVjdGlvbicsICdjb2xsZWN0aW9ucyZ1cmw9a2lkc21vdmllcycsICdjb2xsZWN0aW9ua2lkcy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKCiAgICAgICAgc2VsZi5lbmREaXJlY3RvcnkoKQoKICAgIGRlZiBjb2xsZWN0aW9uQm94c2V0S2lkcyhzZWxmKToKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJzEwMSBEYWxtYXRpb25zICgxOTYxLTIwMDMpJywgJ2NvbGxlY3Rpb25zJnVybD1vbmVodW5kcmVkb25lZGFsbWF0aW9ucycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0FkZGFtcyBGYW1pbHkgKDE5OTEtMTk5OCknLCAnY29sbGVjdGlvbnMmdXJsPWFkZGFtc2ZhbWlseScsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0FsYWRkaW4gKDE5OTItMTk5NiknLCAnY29sbGVjdGlvbnMmdXJsPWFsYWRkaW4nLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdBbHZpbiBhbmQgdGhlIENoaXBtdW5rcyAoMjAwNy0yMDE1KScsICdjb2xsZWN0aW9ucyZ1cmw9YWx2aW5hbmR0aGVjaGlwbXVua3MnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdBdGxhbnRpcyAoMjAwMS0yMDAzKScsICdjb2xsZWN0aW9ucyZ1cmw9YXRsYW50aXMnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdCYWJlICgxOTk1LTE5OTgpJywgJ2NvbGxlY3Rpb25zJnVybD1iYWJlJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQmFsdG8gKDE5OTUtMTk5OCknLCAnY29sbGVjdGlvbnMmdXJsPWJhbHRvJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQmFtYmkgKDE5NDItMjAwNiknLCAnY29sbGVjdGlvbnMmdXJsPWJhbWJpJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQmVhdXR5IGFuZCB0aGUgQmVhc3QgKDE5OTEtMjAxNyknLCAnY29sbGVjdGlvbnMmdXJsPWJlYXV0eWFuZHRoZWJlYXN0JywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQmVldGhvdmVuICgxOTkyLTIwMTQpJywgJ2NvbGxlY3Rpb25zJnVybD1iZWV0aG92ZW4nLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdCcm90aGVyIEJlYXIgKDIwMDMtMjAwNiknLCAnY29sbGVjdGlvbnMmdXJsPWJyb3RoZXJiZWFyJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnQ2FycyAoMjAwNi0yMDE3KScsICdjb2xsZWN0aW9ucyZ1cmw9Y2FycycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0NpbmRlcmVsbGEgKDE5NTAtMjAwNyknLCAnY29sbGVjdGlvbnMmdXJsPWNpbmRlcmVsbGEnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdDbG91ZHkgV2l0aCBhIENoYW5jZSBvZiBNZWF0YmFsbHMgKDIwMDktMjAxMyknLCAnY29sbGVjdGlvbnMmdXJsPWNsb3VkeXdpdGhhY2hhbmNlb2ZtZWF0YmFsbHMnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdEZXNwaWNhYmxlIE1lICgyMDEwLTIwMTUpJywgJ2NvbGxlY3Rpb25zJnVybD1kZXNwaWNhYmxlbWUnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdGaW5kaW5nIE5lbW8gKDIwMDMtMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPWZpbmRpbmduZW1vJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnRm94IGFuZCB0aGUgSG91bmQgKDE5ODEtMjAwNiknLCAnY29sbGVjdGlvbnMmdXJsPWZveGFuZHRoZWhvdW5kJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnRnJlZSBXaWxseSAoMTk5My0yMDEwKScsICdjb2xsZWN0aW9ucyZ1cmw9ZnJlZXdpbGx5JywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnR2hvc3RidXN0ZXJzICgxOTg0LTIwMTYpJywgJ2NvbGxlY3Rpb25zJnVybD1naG9zdGJ1c3RlcnMnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdHcmVtbGlucyAoMTk4NC0yMDE2KScsICdjb2xsZWN0aW9ucyZ1cmw9Z3JlbWxpbnMnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdIYXBweSBGZWV0ICgyMDA2LTIwMTEpJywgJ2NvbGxlY3Rpb25zJnVybD1oYXBweWZlZXQnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdIYXJyeSBQb3R0ZXIgKDIwMDEtMjAxMSknLCAnY29sbGVjdGlvbnMmdXJsPWhhcnJ5cG90dGVyJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSG9tZSBBbG9uZSAoMTk5MC0yMDEyKScsICdjb2xsZWN0aW9ucyZ1cmw9aG9tZWFsb25lJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSG9tZXdhcmQgQm91bmQgKDE5OTMtMTk5NiknLCAnY29sbGVjdGlvbnMmdXJsPWhvbWV3YXJkYm91bmQnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdIb25leSwgSSBTaHJ1bmsgdGhlIEtpZHMgKDE5ODktMTk5NyknLCAnY29sbGVjdGlvbnMmdXJsPWhvbmV5aXNocnVua3RoZWtpZHMnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdIb3RlbCBUcmFuc3lsdmFuaWEgKDIwMTItMjAxNSknLCAnY29sbGVjdGlvbnMmdXJsPWhvdGVsdHJhbnN5bHZhbmlhJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSG93IHRvIFRyYWluIFlvdXIgRHJhZ29uICgyMDEwLTIwMTQpJywgJ2NvbGxlY3Rpb25zJnVybD1ob3d0b3RyYWlueW91cmRyYWdvbicsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0h1bmNoYmFjayBvZiBOb3RyZSBEYW1lICgxOTk2LTIwMDIpJywgJ2NvbGxlY3Rpb25zJnVybD1odW5jaGJhY2tvZm5vdHJlZGFtZScsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0ljZSBBZ2UgKDIwMDItMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPWljZWFnZScsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0p1cmFzc2ljIFBhcmsgKDE5OTMtMjAxNSknLCAnY29sbGVjdGlvbnMmdXJsPWp1cmFzc2ljcGFyaycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0t1bmcgRnUgUGFuZGEgKDIwMDgtMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPWt1bmdmdXBhbmRhJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnTGFkeSBhbmQgdGhlIFRyYW1wICgxOTU1LTIwMDEpJywgJ2NvbGxlY3Rpb25zJnVybD1sYWR5YW5kdGhldHJhbXAnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdMaWxvIGFuZCBTdGl0Y2ggKDIwMDItMjAwNiknLCAnY29sbGVjdGlvbnMmdXJsPWxpbG9hbmRzdGl0Y2gnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdNYWRhZ2FzY2FyICgyMDA1LTIwMTQpJywgJ2NvbGxlY3Rpb25zJnVybD1tYWRhZ2FzY2FyJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnTW9uc3RlcnMgSW5jICgyMDAxLTIwMTMpJywgJ2NvbGxlY3Rpb25zJnVybD1tb25zdGVyc2luYycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ011bGFuICgxOTk4LTIwMDQpJywgJ2NvbGxlY3Rpb25zJnVybD1tdWxhbicsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ05hcm5pYSAoMjAwNS0yMDEwKScsICdjb2xsZWN0aW9ucyZ1cmw9bmFybmlhJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnTmV3IEdyb292ZSAoMjAwMC0yMDA1KScsICdjb2xsZWN0aW9ucyZ1cmw9bmV3Z3Jvb3ZlJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnT3BlbiBTZWFzb24gKDIwMDYtMjAxNSknLCAnY29sbGVjdGlvbnMmdXJsPW9wZW5zZWFzb24nLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdQbGFuZXMgKDIwMTMtMjAxNCknLCAnY29sbGVjdGlvbnMmdXJsPXBsYW5lcycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1BvY2Fob250YXMgKDE5OTUtMTk5OCknLCAnY29sbGVjdGlvbnMmdXJsPXBvY2Fob250YXMnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdQcm9ibGVtIENoaWxkICgxOTkwLTE5OTUpJywgJ2NvbGxlY3Rpb25zJnVybD1wcm9ibGVtY2hpbGQnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdSaW8gKDIwMTEtMjAxNCknLCAnY29sbGVjdGlvbnMmdXJsPXJpbycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1NhbW15cyBBZHZlbnR1cmVzICgyMDEwLTIwMTIpJywgJ2NvbGxlY3Rpb25zJnVybD1zYW1teXNhZHZlbnR1cmVzJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnU2Nvb2J5LURvbyAoMjAwMi0yMDE0KScsICdjb2xsZWN0aW9ucyZ1cmw9c2Nvb2J5ZG9vJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnU2hvcnQgQ2lyY3VpdCAoMTk4Ni0xOTg4KScsICdjb2xsZWN0aW9ucyZ1cmw9c2hvcnRjaXJjdWl0JywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnU2hyZWsgKDIwMDEtMjAxMSknLCAnY29sbGVjdGlvbnMmdXJsPXNocmVrJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnU3BvbmdlQm9iIFNxdWFyZVBhbnRzICgyMDA0LTIwMTcpJywgJ2NvbGxlY3Rpb25zJnVybD1zcG9uZ2Vib2JzcXVhcmVwYW50cycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1NweSBLaWRzICgyMDAxLTIwMTEpJywgJ2NvbGxlY3Rpb25zJnVybD1zcHlraWRzJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnU3RhciBXYXJzICgxOTc3LTIwMTUpJywgJ2NvbGxlY3Rpb25zJnVybD1zdGFyd2FycycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1N0dWFydCBMaXR0bGUgKDE5OTktMjAwMiknLCAnY29sbGVjdGlvbnMmdXJsPXN0dWFydGxpdHRsZScsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RhcnphbiAoMTk5OS0yMDE2KScsICdjb2xsZWN0aW9ucyZ1cmw9dGFyemFuJywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnVGVlbmFnZSBNdXRhbnQgTmluamEgVHVydGxlcyAoMTk3OC0yMDA5KScsICdjb2xsZWN0aW9ucyZ1cmw9dGVlbmFnZW11dGFudG5pbmphdHVydGxlcycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RoZSBKdW5nbGUgQm9vayAoMTk2Ny0yMDAzKScsICdjb2xsZWN0aW9ucyZ1cmw9dGhlanVuZ2xlYm9vaycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RoZSBLYXJhdGUgS2lkICgxOTg0LTIwMTApJywgJ2NvbGxlY3Rpb25zJnVybD10aGVrYXJhdGVraWQnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdUaGUgTGlvbiBLaW5nICgxOTk0LTIwMTYpJywgJ2NvbGxlY3Rpb25zJnVybD10aGVsaW9ua2luZycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RoZSBMaXR0bGUgTWVybWFpZCAoMTk4OS0xOTk1KScsICdjb2xsZWN0aW9ucyZ1cmw9dGhlbGl0dGxlbWVybWFpZCcsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RoZSBOZXZlcmVuZGluZyBTdG9yeSAoMTk4NC0xOTk0KScsICdjb2xsZWN0aW9ucyZ1cmw9dGhlbmV2ZXJlbmRpbmdzdG9yeScsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RoZSBTbXVyZnMgKDIwMTEtMjAxMyknLCAnY29sbGVjdGlvbnMmdXJsPXRoZXNtdXJmcycsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1Rvb3RoIEZhaXJ5ICgyMDEwLTIwMTIpJywgJ2NvbGxlY3Rpb25zJnVybD10b290aGZhaXJ5JywgJ2NvbGxlY3Rpb25raWRzYm94c2V0LnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnVGlua2VyIEJlbGwgKDIwMDgtMjAxNCknLCAnY29sbGVjdGlvbnMmdXJsPXRpbmtlcmJlbGwnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdUb20gYW5kIEplcnJ5ICgxOTkyLTIwMTMpJywgJ2NvbGxlY3Rpb25zJnVybD10b21hbmRqZXJyeScsICdjb2xsZWN0aW9ua2lkc2JveHNldC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1RveSBTdG9yeSAoMTk5NS0yMDE0KScsICdjb2xsZWN0aW9ucyZ1cmw9dG95c3RvcnknLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdWZWdnaWVUYWxlcyAoMjAwMi0yMDA4KScsICdjb2xsZWN0aW9ucyZ1cmw9dmVnZ2lldGFsZXMnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdXaW5uaWUgdGhlIFBvb2ggKDIwMDAtMjAwNSknLCAnY29sbGVjdGlvbnMmdXJsPXdpbm5pZXRoZXBvb2gnLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdXaXphcmQgb2YgT3ogKDE5MzktMjAxMyknLCAnY29sbGVjdGlvbnMmdXJsPXdpemFyZG9mb3onLCAnY29sbGVjdGlvbmtpZHNib3hzZXQucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCgogICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKCgogICAgZGVmIGNvbGxlY3Rpb25TdXBlcmhlcm8oc2VsZik6CiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdBdmVuZ2VycyAoMjAwOC0yMDE3KScsICdjb2xsZWN0aW9ucyZ1cmw9YXZlbmdlcnMnLCAnY29sbGVjdGlvbnN1cGVyaGVyby5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ0JhdG1hbiAoMTk4OS0yMDE2KScsICdjb2xsZWN0aW9ucyZ1cmw9YmF0bWFuJywgJ2NvbGxlY3Rpb25zdXBlcmhlcm8ucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdDYXB0YWluIEFtZXJpY2EgKDIwMTEtMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPWNhcHRhaW5hbWVyaWNhJywgJ2NvbGxlY3Rpb25zdXBlcmhlcm8ucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdEYXJrIEtuaWdodCBUcmlsb2d5ICgyMDA1LTIwMTMpJywgJ2NvbGxlY3Rpb25zJnVybD1kYXJra25pZ2h0JywgJ2NvbGxlY3Rpb25zdXBlcmhlcm8ucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdGYW50YXN0aWMgRm91ciAoMjAwNS0yMDE1KScsICdjb2xsZWN0aW9ucyZ1cmw9ZmFudGFzdGljZm91cicsICdjb2xsZWN0aW9uc3VwZXJoZXJvLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSHVsayAoMjAwMy0yMDA4KScsICdjb2xsZWN0aW9ucyZ1cmw9aHVsaycsICdjb2xsZWN0aW9uc3VwZXJoZXJvLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnSXJvbiBNYW4gKDIwMDgtMjAxMyknLCAnY29sbGVjdGlvbnMmdXJsPWlyb25tYW4nLCAnY29sbGVjdGlvbnN1cGVyaGVyby5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ1NwaWRlci1NYW4gKDIwMDItMjAxNyknLCAnY29sbGVjdGlvbnMmdXJsPXNwaWRlcm1hbicsICdjb2xsZWN0aW9uc3VwZXJoZXJvLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnU3VwZXJtYW4gKDE5NzgtMjAxNiknLCAnY29sbGVjdGlvbnMmdXJsPXN1cGVybWFuJywgJ2NvbGxlY3Rpb25zdXBlcmhlcm8ucG5nJywgJ0RlZmF1bHRSZWNlbnRseUFkZGVkTW92aWVzLnBuZycpCiAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKCdYLU1lbiAoMjAwMC0yMDE2KScsICdjb2xsZWN0aW9ucyZ1cmw9eG1lbicsICdjb2xsZWN0aW9uc3VwZXJoZXJvLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQogICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgnREMgQ29taWNzIENvbGxlY3Rpb24nLCAnY29sbGVjdGlvbnMmdXJsPWRjbW92aWVzJywgJ2NvbGxlY3Rpb25kYy5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oJ01hcnZlbCBDb2xsZWN0aW9uJywgJ2NvbGxlY3Rpb25zJnVybD1tYXJ2ZWxtb3ZpZXMnLCAnY29sbGVjdGlvbm1hcnZlbC5wbmcnLCAnRGVmYXVsdFJlY2VudGx5QWRkZWRNb3ZpZXMucG5nJykKICAgICAgICAKICAgICAgICBzZWxmLmVuZERpcmVjdG9yeSgpCgoKICAgIGRlZiBlbmREaXJlY3Rvcnkoc2VsZik6CiAgICAgICAgY29udHJvbC5jb250ZW50KHN5c2hhbmRsZSwgJ2FkZG9ucycpCiAgICAgICAgY29udHJvbC5kaXJlY3Rvcnkoc3lzaGFuZGxlLCBjYWNoZVRvRGlzYz1UcnVlKQoKCgoKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyMjIyMjIyMjIyMjIyMjI05PVEVTIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojaWYgbm90IGNvbnRyb2wuc2V0dGluZygnbGlzdHMud2lkZ2V0JykgPT0gJzAnOgogICAgICAgICAgICAjc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDAzLCAnbXltb3ZpZU5hdmlnYXRvcicsICdteW1vdmllcy5wbmcnLCAnRGVmYXVsdFZpZGVvUGxheWxpc3RzLnBuZycpCiAgICAgICAgICAgICNzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMDQsICdteXR2TmF2aWdhdG9yJywgJ215dHZzaG93cy5wbmcnLCAnRGVmYXVsdFZpZGVvUGxheWxpc3RzLnBuZycpCgogICAgICAgICNpZiBub3QgY29udHJvbC5zZXR0aW5nKCdtb3ZpZS53aWRnZXQnKSA9PSAnMCc6CiAgICAgICAgICAgICNzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzIwMDUsICdtb3ZpZVdpZGdldCcsICdsYXRlc3QtbW92aWVzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZE1vdmllcy5wbmcnKQoKICAgICAgICAjaWYgKHRyYWt0SW5kaWNhdG9ycyA9PSBUcnVlIGFuZCBub3QgY29udHJvbC5zZXR0aW5nKCd0di53aWRnZXQuYWx0JykgPT0gJzAnKSBvciAodHJha3RJbmRpY2F0b3JzID09IEZhbHNlIGFuZCBub3QgY29udHJvbC5zZXR0aW5nKCd0di53aWRnZXQnKSA9PSAnMCcpOgogICAgICAgICAgICAjc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDA2LCAndHZXaWRnZXQnLCAnbGF0ZXN0LWVwaXNvZGVzLnBuZycsICdEZWZhdWx0UmVjZW50bHlBZGRlZEVwaXNvZGVzLnBuZycpCiAgICAgICAgI2lmIG5vdCBjb250cm9sLnNldHRpbmcoJ2Z1cmsuYXBpJykgPT0gJyc6CiAgICAgICAgI3NlbGYuYWRkRGlyZWN0b3J5SXRlbSgnRnVyay5uZXQnLCAnZnVya05hdmlnYXRvcicsICdtb3ZpZXMucG5nJywgJ21vdmllcy5wbmcnKQoKICAgICAgICAjc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyMDEwLCAnc2VhcmNoTmF2aWdhdG9yJywgJ3NlYXJjaC5wbmcnLCAnRGVmYXVsdEZvbGRlci5wbmcnKQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIyMjIyMjIyMjI05hdmlnYXRpb24gWW91VHViZSBTdHVmZiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMKJycnCiAgICBkZWYgeXQoc2VsZiwgbGl0ZT1GYWxzZSk6CiAgICAgICAgY2hhbm5lbHMgPSBUcnVlIGlmIGNvbnRyb2wuc2V0dGluZygnbmF2aS53aWRnZXQnKSA9PSAndHJ1ZScgZWxzZSBGYWxzZQogICAgICAgIGlmIGNoYW5uZWxzID09IFRydWU6CiAgICAgICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkua2lkc2Nvcm5lcicpID09IFRydWU6CiAgICAgICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzI2MTAsICdraWRzY29ybmVyJywgJ2tpZHNjb3JuZXIucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS5raWRzY29ybmVyJykgPT0gVHJ1ZToKICAgICAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjYxMCwgJ2tpZHNjb3JuZXInLCAna2lkc2Nvcm5lci5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQogICAgICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLmZpdG5lc3MnKSA9PSBUcnVlOgogICAgICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDMyNjExLCAnZml0bmVzcycsICdmaXRuZXNzLnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCiAgICAgICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkubGVnZW5kcycpID09IFRydWU6CiAgICAgICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oMzI2MTIsICdsZWdlbmRzJywgJ2xlZ2VuZHMucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS5raW5ncycpID09IFRydWU6CiAgICAgICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oODAwMDAsICdraW5ncycsICdraW5ncy5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQogICAgICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLmt1bmdmdScpID09IFRydWU6CiAgICAgICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oODAwMDEsICdrdW5nZnUnLCAna3VuZ2Z1LnBuZycsICdEZWZhdWx0TW92aWVzLnBuZycpCiAgICAgICAgICAgIGlmIHNlbGYuZ2V0TWVudUVuYWJsZWQoJ25hdmkudXJiYW4nKSA9PSBUcnVlOgogICAgICAgICAgICAgICAgc2VsZi5hZGREaXJlY3RvcnlJdGVtKDgwMDAyLCAndXJiYW4nLCAndXJiYW4ucG5nJywgJ0RlZmF1bHRNb3ZpZXMucG5nJykKICAgICAgICAgICAgaWYgc2VsZi5nZXRNZW51RW5hYmxlZCgnbmF2aS5zY2lmaScpID09IFRydWU6CiAgICAgICAgICAgICAgICBzZWxmLmFkZERpcmVjdG9yeUl0ZW0oODAwMDMsICdzY2lmaScsICdzY2lmaS5wbmcnLCAnRGVmYXVsdE1vdmllcy5wbmcnKQogICAgICAgICAgICBpZiBzZWxmLmdldE1lbnVFbmFibGVkKCduYXZpLnBvZGNhc3RzJykgPT0gVHJ1ZToKICAgICAgICAgICAgICAgIHNlbGYuYWRkRGlyZWN0b3J5SXRlbSgzMjYyMCwgJ3BvZGNhc3ROYXZpZ2F0b3InLCAncG9kY2FzdC5wbmcnLCAnRGVmYXVsdFZpZGVvUGxheWxpc3RzLnBuZycpCgogICAgICAgIHNlbGYuZW5kRGlyZWN0b3J5KCkKJycn')